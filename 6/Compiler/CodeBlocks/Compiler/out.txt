Please input a file:
cnt_tab 1 ::: N const int 100 1 0 &&& 0
QUAT!!! const_int N 100  ::: 0
cnt_tab 2 ::: M const int 10000 2 0 &&& 0
QUAT!!! const_int M 10000  ::: 0
This is a const_int statement::: 2elements::: const int N = 100, M = -10000

cnt_tab 3 ::: K const int 0 3 0 &&& 0
QUAT!!! const_int K 0  ::: 0
This is a const_int statement::: 1elements::: const int K = 0

cnt_tab 4 ::: ch1 const char 43 4 0 &&& 0
QUAT!!! const_char ch1 43  ::: 0
cnt_tab 5 ::: ch2 const char 45 5 0 &&& 0
QUAT!!! const_char ch2 45  ::: 0
cnt_tab 6 ::: ch3 const char 42 6 0 &&& 0
QUAT!!! const_char ch3 42  ::: 0
cnt_tab 7 ::: ch4 const char 47 7 0 &&& 0
QUAT!!! const_char ch4 47  ::: 0
cnt_tab 8 ::: ch5 const char 95 8 0 &&& 0
QUAT!!! const_char ch5 95  ::: 0
cnt_tab 9 ::: ch6 const char 97 9 0 &&& 0
QUAT!!! const_char ch6 97  ::: 0
cnt_tab 10 ::: ch7 const char 48 10 0 &&& 0
QUAT!!! const_char ch7 48  ::: 0
cnt_tab 11 ::: ch8 const char 75 11 0 &&& 0
QUAT!!! const_char ch8 75  ::: 0
cnt_tab 12 ::: ch9 const char 57 12 0 &&& 0
QUAT!!! const_char ch9 57  ::: 0
This is a const_char statement::: 9elements::: const char ch1 = '+', ch2 = '-', ch3 = '*', ch4 = '/', ch5 = '_', ch6 = 'a', ch7 = '0', ch8 = 'K', ch9 = '9'

cnt_tab 13 ::: a variable int[] 0 13 10000 &&& 0
QUAT!!! variable_int[] a 10000  ::: 0
cnt_tab 14 ::: i variable int 0 14 0 &&& 0
QUAT!!! variable_int i 10000  ::: 0
cnt_tab 15 ::: j variable int 0 15 0 &&& 0
QUAT!!! variable_int j 10000  ::: 0
cnt_tab 16 ::: n variable int 0 16 0 &&& 0
QUAT!!! variable_int n 10000  ::: 0
cnt_tab 17 ::: m variable int 0 17 0 &&& 0
QUAT!!! variable_int m 10000  ::: 0
cnt_tab 18 ::: k variable int 0 18 0 &&& 0
QUAT!!! variable_int k 10000  ::: 0
cnt_tab 19 ::: x variable int 0 19 0 &&& 0
QUAT!!! variable_int x 10000  ::: 0
cnt_tab 20 ::: y variable int 0 20 0 &&& 0
QUAT!!! variable_int y 10000  ::: 0
cnt_tab 21 ::: z variable int 0 21 0 &&& 0
QUAT!!! variable_int z 10000  ::: 0
cnt_tab 22 ::: mx variable int 0 22 0 &&& 0
QUAT!!! variable_int mx 10000  ::: 0
This is a variable_int statement::: 10 variables::: int a[10000],  i, j, n, m, k, x, y, z, mx

cnt_tab 23 ::: ch variable char 0 23 0 &&& 0
QUAT!!! variable_char ch 10000  ::: 0
cnt_tab 24 ::: s variable char[] 0 24 10000 &&& 0
QUAT!!! variable_char[] s 10000  ::: 0
This is a variable_char[] statement::: 2 variables::: 
char ch, s[10000]

cnt_tab 25 ::: mymax function int 0 0 0 &&& 1
QUAT!!! function_int mymax   ::: 1
cnt_tab 26 ::: x parameter int 0 1 0 &&& 1
QUAT!!! parameter_int x   ::: 1
cnt_tab 27 ::: y parameter int 0 2 0 &&& 1
QUAT!!! parameter_int y   ::: 1
This is a functionint statement mymax ::: 2 parameters::: int mymax(int x, int y)

cnt_tab 28 ::: ppp const int 1 3 0 &&& 1
QUAT!!! const_int ppp 1  ::: 1
cnt_tab 29 ::: qqq const int 9999 4 0 &&& 1
QUAT!!! const_int qqq 9999  ::: 1
This is a const_int statement::: 2elements::: const int ppp = 1, qqq = 9999

cnt_tab 30 ::: ans variable int 0 5 0 &&& 1
QUAT!!! variable_int ans   ::: 1
This is a variable_int statement::: 1 variables::: int ans

QUAT!!! BEGIN    ::: 1
This is a factor statemnt::: x

This is a term statemnt::: x

This is a expression statemnt::: x

QUAT!!! = ans x  ::: 1
This is an assign statement::: ans = x

This is a factor statemnt::: y 

This is a term statemnt::: y 

This is a expression statemnt::: y 

This is a factor statemnt::: x

This is a term statemnt::: x

This is a expression statemnt::: x

QUAT!!! > y x  ::: 1
This is a condition ::: y > x

QUAT!!! BZ LABEL_1   ::: 1
This is a factor statemnt::: y

This is a term statemnt::: y

This is a expression statemnt::: y

QUAT!!! = ans y  ::: 1
This is an assign statement::: ans = y

QUAT!!! GOTO LABEL_2   ::: 1
This is a if_elsestatement::: if (y > x){
        ans = y;
    }
    else
    ;
    

This is a factor statemnt::: ans

This is a term statemnt::: ans

This is a expression statemnt::: ans

This is a return statement::: return (ans)

QUAT!!! ret ans   ::: 1
siz = 4176 now = 383

cnt_tab 31 ::: factorial function int 0 0 0 &&& 2
QUAT!!! function_int factorial   ::: 2
cnt_tab 32 ::: n parameter int 0 1 0 &&& 2
QUAT!!! parameter_int n   ::: 2
This is a functionint statement factorial ::: 1 parameters::: int factorial(int n)

cnt_tab 33 ::: res variable int 0 2 0 &&& 2
QUAT!!! variable_int res   ::: 2
This is a variable_int statement::: 1 variables::: int res

QUAT!!! BEGIN    ::: 2
This is a factor statemnt::: n 

This is a term statemnt::: n 

This is a expression statemnt::: n 

This is a factor statemnt::: 0

This is a term statemnt::: 0

This is a expression statemnt::: 0

QUAT!!! < n 0  ::: 2
This is a condition ::: n < 0

QUAT!!! BZ LABEL_3   ::: 2
This is a factor statemnt::: 1

This is a term statemnt::: 1

QUAT!!! * #1 -1 1 ::: 2
This is a expression statemnt::: -1

This is a return statement::: return (-1)

QUAT!!! ret #1   ::: 2
This is a ifstatement::: if (n < 0)
        return (-1);
    

This is a factor statemnt::: n

This is a term statemnt::: n

This is a expression statemnt::: n

QUAT!!! SWITCH n   ::: 2
QUAT!!! == n 0  ::: 2
QUAT!!! BZ LABEL_6   ::: 2
This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: 1

QUAT!!! = res 1  ::: 2
This is an assign statement::: res = 1

QUAT!!! GOTO    ::: 2
QUAT!!! == n 1  ::: 2
QUAT!!! BZ LABEL_7   ::: 2
This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: 1

QUAT!!! = res 1  ::: 2
This is an assign statement::: res = 1

QUAT!!! GOTO    ::: 2
This is cases statement with::: 2 cases::: case 0: res = 1; 
        case 1: res = 1; 
        

This is a factor statemnt::: n

This is a factor statemnt::: n

This is a term statemnt::: n

This is a factor statemnt::: 1

This is a term statemnt::: 1

QUAT!!! - #2 n 1 ::: 2
This is a expression statemnt::: n-1

QUAT!!! PUSH #2 1  ::: 2
This is a parameter with ::: 1 parameters::: n-1

This is function_call statement::: factorial(n-1)

QUAT!!! call factorial   ::: 2
QUAT!!! = #3 RET_int  ::: 2
This is a factor statemnt::: factorial(n-1)

QUAT!!! * #4 n #3 ::: 2
This is a term statemnt::: n*factorial(n-1)

This is a expression statemnt::: n*factorial(n-1)

This is a factor statemnt::: (n*factorial(n-1))

This is a term statemnt::: (n*factorial(n-1))

This is a expression statemnt::: (n*factorial(n-1))

QUAT!!! = res #4  ::: 2
This is an assign statement::: res = (n*factorial(n-1))

This is a default statement::: default:  res = (n*factorial(n-1));
    

This is a switch statement::: switch (n){
        case 0: res = 1; 
        case 1: res = 1; 
        default:  res = (n*factorial(n-1));
    }
    

This is a factor statemnt::: res

This is a term statemnt::: res

This is a expression statemnt::: res

This is a return statement::: return (res)

QUAT!!! ret res   ::: 2
siz = 4176 now = 593

cnt_tab 34 ::: C function int 0 0 0 &&& 3
QUAT!!! function_int C   ::: 3
cnt_tab 35 ::: m parameter int 0 1 0 &&& 3
QUAT!!! parameter_int m   ::: 3
cnt_tab 36 ::: n parameter int 0 2 0 &&& 3
QUAT!!! parameter_int n   ::: 3
This is a functionint statement C ::: 2 parameters::: int C(int m, int n)

cnt_tab 37 ::: x variable int 0 3 0 &&& 3
QUAT!!! variable_int x   ::: 3
cnt_tab 38 ::: y variable int 0 4 0 &&& 3
QUAT!!! variable_int y   ::: 3
cnt_tab 39 ::: z variable int 0 5 0 &&& 3
QUAT!!! variable_int z   ::: 3
This is a variable_int statement::: 3 variables::: int x, y, z

QUAT!!! BEGIN    ::: 3
This is a factor statemnt::: m 

This is a term statemnt::: m 

This is a expression statemnt::: m 

This is a factor statemnt::: n

This is a term statemnt::: n

This is a expression statemnt::: n

QUAT!!! <= m n  ::: 3
This is a condition ::: m <= n

QUAT!!! BZ LABEL_9   ::: 3
This is a ifstatement::: if (m <= n) ;
    
    

This is a factor statemnt::: m 

This is a term statemnt::: m 

This is a expression statemnt::: m 

This is a factor statemnt::: n

This is a term statemnt::: n

This is a expression statemnt::: n

QUAT!!! > m n  ::: 3
This is a condition ::: m > n

QUAT!!! BZ LABEL_11   ::: 3
This is a factor statemnt::: 1

This is a term statemnt::: 1

QUAT!!! * #5 -1 1 ::: 3
This is a expression statemnt::: -1

This is a return statement::: return (-1)

QUAT!!! ret #5   ::: 3
This is a ifstatement::: if (m > n)
        return (-1);
    

This is a factor statemnt::: n

This is a term statemnt::: n

This is a expression statemnt::: n

QUAT!!! PUSH n 1  ::: 3
This is a parameter with ::: 1 parameters::: n

This is function_call statement::: factorial(n)

QUAT!!! call factorial   ::: 3
QUAT!!! = #6 RET_int  ::: 3
This is a factor statemnt::: factorial(n)

This is a factor statemnt::: m

This is a term statemnt::: m

This is a expression statemnt::: m

QUAT!!! PUSH m 1  ::: 3
This is a parameter with ::: 1 parameters::: m

This is function_call statement::: factorial(m)

QUAT!!! call factorial   ::: 3
QUAT!!! = #7 RET_int  ::: 3
This is a factor statemnt::: factorial(m)

QUAT!!! / #8 #6 #7 ::: 3
This is a factor statemnt::: n

This is a term statemnt::: n

This is a factor statemnt::: m

This is a term statemnt::: m

QUAT!!! - #9 n m ::: 3
This is a expression statemnt::: n-m

QUAT!!! PUSH #9 1  ::: 3
This is a parameter with ::: 1 parameters::: n-m

This is function_call statement::: factorial(n-m)

QUAT!!! call factorial   ::: 3
QUAT!!! = #10 RET_int  ::: 3
This is a factor statemnt::: factorial(n-m)

QUAT!!! / #11 #8 #10 ::: 3
This is a term statemnt::: factorial(n)/factorial(m)/factorial(n-m)

This is a expression statemnt::: factorial(n)/factorial(m)/factorial(n-m)

This is a return statement::: return (factorial(n)/factorial(m)/factorial(n-m))

QUAT!!! ret #11   ::: 3
siz = 4176 now = 749

cnt_tab 40 ::: init void  0 0 0 &&& 4
QUAT!!! void_ init   ::: 4
This is a void statement init ::: 0 parameters::: void init()

QUAT!!! BEGIN    ::: 4
QUAT!!! PRINT "Please enter n,m,k,ch:" string  ::: 4
QUAT!!! PRINTLN    ::: 4
This is a printf statement::: printf("Please enter n,m,k,ch:")

This is a factor statemnt::: 5

This is a term statemnt::: 5

This is a expression statemnt::: 5

QUAT!!! = m 5  ::: 4
This is an assign statement::: m = 5

QUAT!!! READ n   ::: 4
QUAT!!! READ m   ::: 4
QUAT!!! READ k   ::: 4
QUAT!!! READ ch   ::: 4
This is a scanf statement::: 4 variables::: scanf(n,m,k, ch)

QUAT!!! PRINT "" string  ::: 4
QUAT!!! PRINTLN    ::: 4
This is a printf statement::: printf("")

QUAT!!! ret    ::: 4
This is a return statement::: return 

siz = 4176 now = 864

cnt_tab 41 ::: work function char 0 0 0 &&& 5
QUAT!!! function_char work   ::: 5
cnt_tab 42 ::: m parameter int 0 1 0 &&& 5
QUAT!!! parameter_int m   ::: 5
cnt_tab 43 ::: n parameter int 0 2 0 &&& 5
QUAT!!! parameter_int n   ::: 5
This is a functionchar statement work ::: 2 parameters::: char work(int m, int n)

cnt_tab 44 ::: ans variable int 0 3 0 &&& 5
QUAT!!! variable_int ans   ::: 5
This is a variable_int statement::: 1 variables::: int ans

QUAT!!! BEGIN    ::: 5
This is a factor statemnt::: m

This is a term statemnt::: m

This is a expression statemnt::: m

QUAT!!! PUSH m 1  ::: 5
This is a factor statemnt::: n

This is a term statemnt::: n

This is a expression statemnt::: n

QUAT!!! PUSH n 2  ::: 5
This is a parameter with ::: 2 parameters::: m,n

This is function_call statement::: C(m,n)

QUAT!!! call C   ::: 5
QUAT!!! = #12 RET_int  ::: 5
This is a factor statemnt::: C(m,n)

This is a term statemnt::: C(m,n)

This is a expression statemnt::: C(m,n)

QUAT!!! = ans #12  ::: 5
This is an assign statement::: ans = C(m,n)

This is a factor statemnt::: ans 

This is a term statemnt::: ans 

This is a factor statemnt::: 2

This is a factor statemnt::: ans 

This is a factor statemnt::: 2

QUAT!!! / #13 ans 2 ::: 5
This is a term statemnt::: ans / 2

This is a expression statemnt::: ans / 2

This is a factor statemnt::: (ans / 2)

QUAT!!! * #14 2 #13 ::: 5
This is a term statemnt::: 2*(ans / 2)

QUAT!!! - #15 ans #14 ::: 5
This is a expression statemnt::: ans - 2*(ans / 2)

QUAT!!! SWITCH #15   ::: 5
QUAT!!! == #15 1  ::: 5
QUAT!!! BZ LABEL_14   ::: 5
This is a factor statemnt::: 'O'

This is a term statemnt::: 'O'

This is a expression statemnt::: 'O'

This is a return statement::: return ('O')

QUAT!!! ret 'O'   ::: 5
QUAT!!! GOTO    ::: 5
QUAT!!! == #15 -1  ::: 5
QUAT!!! BZ LABEL_15   ::: 5
This is a factor statemnt::: 'O'

This is a term statemnt::: 'O'

This is a expression statemnt::: 'O'

This is a return statement::: return ('O')

QUAT!!! ret 'O'   ::: 5
QUAT!!! GOTO    ::: 5
This is cases statement with::: 2 cases::: case 1: return ('O'); 
        case -1: return ('O');
        

This is a factor statemnt::: 'E'

This is a term statemnt::: 'E'

This is a expression statemnt::: 'E'

This is a return statement::: return ('E')

QUAT!!! ret 'E'   ::: 5
This is a default statement::: default: return ('E'); 
    

This is a switch statement::: switch (ans - 2*(ans / 2)){ 
        case 1: return ('O'); 
        case -1: return ('O');
        default: return ('E'); 
    }
    

This is a factor statemnt::: '*'

This is a term statemnt::: '*'

This is a expression statemnt::: '*'

This is a return statement::: return ('*')

QUAT!!! ret '*'   ::: 5
siz = 4176 now = 1074

cnt_tab 45 ::: test_switch void  0 0 0 &&& 6
QUAT!!! void_ test_switch   ::: 6
This is a void statement test_switch ::: 0 parameters::: void test_switch()

cnt_tab 46 ::: Int variable int 0 1 0 &&& 6
QUAT!!! variable_int Int   ::: 6
cnt_tab 47 ::: a variable int[] 0 2 1000 &&& 6
QUAT!!! variable_int[] a 1000  ::: 6
This is a variable_int[] statement::: 2 variables::: int Int, a[1000]

QUAT!!! BEGIN    ::: 6
QUAT!!! PRINT "************************" string  ::: 6
QUAT!!! PRINTLN    ::: 6
This is a printf statement::: printf("************************")

QUAT!!! PRINT "START test_switch" string  ::: 6
QUAT!!! PRINTLN    ::: 6
This is a printf statement::: printf("START test_switch")

This is a factor statemnt::: 2

This is a term statemnt::: 2

This is a expression statemnt::: 2

This is a factor statemnt::: 1

This is a term statemnt::: 1

QUAT!!! * #16 -1 1 ::: 6
This is a expression statemnt::: -1

QUAT!!! = a[2] #16  ::: 6
This is an assign statement::: a[2] = -1

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: 1

This is a factor statemnt::: 2

This is a term statemnt::: 2

QUAT!!! * #17 -1 2 ::: 6
This is a expression statemnt::: -2

QUAT!!! = a[1] #17  ::: 6
This is an assign statement::: a[1] = -2

This is a factor statemnt::: 2

This is a factor statemnt::: 5

QUAT!!! * #18 2 5 ::: 6
This is a factor statemnt::: 4

QUAT!!! / #19 #18 4 ::: 6
This is a term statemnt::: 2*5/4

This is a expression statemnt::: 2*5/4

QUAT!!! = Int #19  ::: 6
This is an assign statement::: Int = 2*5/4

QUAT!!! PRINT "Int=" string  ::: 6
This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a expression statemnt::: Int

QUAT!!! PRINT Int int  ::: 6
QUAT!!! PRINTLN    ::: 6
This is a printf statement::: printf("Int=", Int)

This is a factor statemnt::: 2

This is a factor statemnt::: 5

QUAT!!! * #20 2 5 ::: 6
This is a factor statemnt::: 4

QUAT!!! / #21 #20 4 ::: 6
This is a term statemnt::: 2*5/4

This is a expression statemnt::: 2*5/4

QUAT!!! = #22 a[#21]  ::: 6
This is a factor statemnt::: a[2*5/4]

This is a term statemnt::: a[2*5/4]

This is a expression statemnt::: a[2*5/4]

QUAT!!! = Int #22  ::: 6
This is an assign statement::: Int = a[2*5/4]

QUAT!!! PRINT "Int=" string  ::: 6
This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a expression statemnt::: Int

QUAT!!! PRINT Int int  ::: 6
QUAT!!! PRINTLN    ::: 6
This is a printf statement::: printf("Int=", Int)

This is a factor statemnt::: 2

This is a term statemnt::: 2

This is a factor statemnt::: 2

This is a factor statemnt::: 5

QUAT!!! * #23 2 5 ::: 6
This is a factor statemnt::: 4

QUAT!!! / #24 #23 4 ::: 6
This is a term statemnt::: 2*5/4

This is a expression statemnt::: 2*5/4

QUAT!!! = #25 a[#24]  ::: 6
This is a factor statemnt::: a[2*5/4]

This is a term statemnt::: a[2*5/4]

QUAT!!! + #26 2 #25 ::: 6
This is a expression statemnt::: 2+a[2*5/4]

QUAT!!! = #27 a[#26]  ::: 6
This is a factor statemnt::: a[2+a[2*5/4]]

This is a term statemnt::: a[2+a[2*5/4]]

This is a expression statemnt::: a[2+a[2*5/4]]

QUAT!!! = Int #27  ::: 6
This is an assign statement::: Int = a[2+a[2*5/4]]

QUAT!!! PRINT "Int=" string  ::: 6
This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a expression statemnt::: Int

QUAT!!! PRINT Int int  ::: 6
QUAT!!! PRINTLN    ::: 6
This is a printf statement::: printf("Int=", Int)

This is a factor statemnt::: 2

This is a term statemnt::: 2

This is a factor statemnt::: 2

This is a factor statemnt::: 5

QUAT!!! * #28 2 5 ::: 6
This is a factor statemnt::: 4

QUAT!!! / #29 #28 4 ::: 6
This is a term statemnt::: 2*5/4

This is a expression statemnt::: 2*5/4

QUAT!!! = #30 a[#29]  ::: 6
This is a factor statemnt::: a[2*5/4]

This is a term statemnt::: a[2*5/4]

QUAT!!! + #31 2 #30 ::: 6
This is a expression statemnt::: 2+a[2*5/4]

QUAT!!! = #32 a[#31]  ::: 6
This is a factor statemnt::: a[2+a[2*5/4]]

This is a term statemnt::: a[2+a[2*5/4]]

This is a factor statemnt::: 3

This is a term statemnt::: 3

QUAT!!! + #33 #32 3 ::: 6
This is a expression statemnt::: a[2+a[2*5/4]]+3

QUAT!!! = #34 a[#33]  ::: 6
This is a factor statemnt::: a[a[2+a[2*5/4]]+3]

This is a term statemnt::: a[a[2+a[2*5/4]]+3]

This is a expression statemnt::: a[a[2+a[2*5/4]]+3]

QUAT!!! = Int #34  ::: 6
This is an assign statement::: Int = a[a[2+a[2*5/4]]+3]

QUAT!!! PRINT "Int=" string  ::: 6
This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a expression statemnt::: Int

QUAT!!! PRINT Int int  ::: 6
QUAT!!! PRINTLN    ::: 6
This is a printf statement::: printf("Int=", Int)

This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a expression statemnt::: Int

QUAT!!! SWITCH Int   ::: 6
QUAT!!! == Int -1  ::: 6
QUAT!!! BZ LABEL_18   ::: 6
QUAT!!! PRINT "fail_switch1" string  ::: 6
QUAT!!! PRINTLN    ::: 6
This is a printf statement::: printf("fail_switch1")

QUAT!!! GOTO    ::: 6
QUAT!!! == Int -2  ::: 6
QUAT!!! BZ LABEL_19   ::: 6
QUAT!!! PRINT "success_switch1" string  ::: 6
QUAT!!! PRINTLN    ::: 6
This is a printf statement::: printf("success_switch1")

QUAT!!! GOTO    ::: 6
This is cases statement with::: 2 cases::: case -1: printf("fail_switch1");
        case -2: {printf("success_switch1"); }
        

This is a default statement::: default: ;
    

This is a switch statement::: switch (Int){
        case -1: printf("fail_switch1");
        case -2: {printf("success_switch1"); }
        default: ;
    }

    

This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a factor statemnt::: 1

This is a term statemnt::: 1

QUAT!!! + #35 Int 1 ::: 6
This is a factor statemnt::: 'b'

This is a term statemnt::: 'b'

QUAT!!! + #36 #35 'b' ::: 6
This is a expression statemnt::: Int+1+'b'

QUAT!!! SWITCH #36   ::: 6
QUAT!!! == #36 1  ::: 6
QUAT!!! BZ LABEL_22   ::: 6
This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a factor statemnt::: 1

This is a term statemnt::: 1

QUAT!!! + #37 Int 1 ::: 6
This is a expression statemnt::: Int+1

QUAT!!! = Int #37  ::: 6
This is an assign statement::: Int = Int+1

QUAT!!! GOTO    ::: 6
QUAT!!! == #36 97  ::: 6
QUAT!!! BZ LABEL_23   ::: 6
QUAT!!! PRINT "success_switch2" string  ::: 6
QUAT!!! PRINTLN    ::: 6
This is a printf statement::: printf("success_switch2")

QUAT!!! GOTO    ::: 6
QUAT!!! == #36 -123  ::: 6
QUAT!!! BZ LABEL_24   ::: 6
QUAT!!! PRINT "fail_switch1" string  ::: 6
This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a expression statemnt::: Int

QUAT!!! PRINT Int int  ::: 6
QUAT!!! PRINTLN    ::: 6
This is a printf statement::: printf("fail_switch1",Int)

This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a expression statemnt::: Int

QUAT!!! PRINT Int int  ::: 6
QUAT!!! PRINTLN    ::: 6
This is a printf statement::: printf(Int)

QUAT!!! GOTO    ::: 6
This is cases statement with::: 3 cases::: case 1: Int = Int+1;
        case 97: {printf("success_switch2");  }
        case -123: {printf("fail_switch1",Int);  printf(Int); }
        

QUAT!!! PRINT "FAIL_switch1" string  ::: 6
QUAT!!! PRINTLN    ::: 6
This is a printf statement::: printf("FAIL_switch1")

This is a default statement::: default: {printf("FAIL_switch1");}
    

This is a switch statement::: switch (Int+1+'b'){
        case 1: Int = Int+1;
        case 97: {printf("success_switch2");  }
        case -123: {printf("fail_switch1",Int);  printf(Int); }
        default: {printf("FAIL_switch1");}
    }
    

QUAT!!! PRINT "END test_switch" string  ::: 6
QUAT!!! PRINTLN    ::: 6
This is a printf statement::: printf("END test_switch")

QUAT!!! PRINT "************************" string  ::: 6
QUAT!!! PRINTLN    ::: 6
This is a printf statement::: printf("************************")

siz = 4176 now = 1830

QUAT!!! ret    ::: 6
cnt_tab 48 ::: test_max void  0 0 0 &&& 7
QUAT!!! void_ test_max   ::: 7
This is a void statement test_max ::: 0 parameters::: void test_max()

QUAT!!! BEGIN    ::: 7
QUAT!!! PRINT "************************" string  ::: 7
QUAT!!! PRINTLN    ::: 7
This is a printf statement::: printf("************************")

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: 1

QUAT!!! PUSH 1 1  ::: 7
This is a factor statemnt::: -2

This is a term statemnt::: -2

QUAT!!! * #38 -1 -2 ::: 7
This is a expression statemnt::: --2

QUAT!!! PUSH #38 2  ::: 7
This is a parameter with ::: 2 parameters::: 1, --2

This is function_call statement::: mymax(1, --2)

QUAT!!! call mymax   ::: 7
QUAT!!! = #39 RET_int  ::: 7
This is a factor statemnt::: mymax(1, --2)

This is a term statemnt::: mymax(1, --2)

This is a expression statemnt::: mymax(1, --2)

QUAT!!! = x #39  ::: 7
This is an assign statement::: x = mymax(1, --2)

This is a factor statemnt::: x

This is a term statemnt::: x

This is a factor statemnt::: +8

This is a term statemnt::: +8

QUAT!!! + #40 x +8 ::: 7
This is a expression statemnt::: x++8

QUAT!!! PUSH #40 1  ::: 7
This is a factor statemnt::: 9

This is a term statemnt::: 9

This is a expression statemnt::: 9

QUAT!!! PUSH 9 2  ::: 7
This is a parameter with ::: 2 parameters::: x++8, 9

This is function_call statement::: mymax(x++8, 9)

QUAT!!! call mymax   ::: 7
QUAT!!! = #41 RET_int  ::: 7
This is a factor statemnt::: mymax(x++8, 9)

This is a term statemnt::: mymax(x++8, 9)

This is a expression statemnt::: mymax(x++8, 9)

QUAT!!! = x #41  ::: 7
This is an assign statement::: x = mymax(x++8, 9)

This is a factor statemnt::: 4

This is a term statemnt::: 4

This is a expression statemnt::: 4

QUAT!!! = y 4  ::: 7
This is an assign statement::: y = 4

This is a factor statemnt::: 7

This is a term statemnt::: 7

This is a expression statemnt::: 7

QUAT!!! = z 7  ::: 7
This is an assign statement::: z = 7

This is a factor statemnt::: x 

This is a term statemnt::: x 

This is a expression statemnt::: x 

This is a factor statemnt::: y

This is a term statemnt::: y

This is a expression statemnt::: y

QUAT!!! > x y  ::: 7
This is a condition ::: x > y

QUAT!!! BZ LABEL_26   ::: 7
This is a factor statemnt::: x 

This is a term statemnt::: x 

This is a expression statemnt::: x 

This is a factor statemnt::: z

This is a term statemnt::: z

This is a expression statemnt::: z

QUAT!!! > x z  ::: 7
This is a condition ::: x > z

QUAT!!! BZ LABEL_28   ::: 7
This is a factor statemnt::: x

This is a term statemnt::: x

This is a expression statemnt::: x

QUAT!!! = mx x  ::: 7
This is an assign statement::: mx = x

QUAT!!! GOTO LABEL_29   ::: 7
This is a factor statemnt::: z

This is a term statemnt::: z

This is a expression statemnt::: z

QUAT!!! = mx z  ::: 7
This is an assign statement::: mx = z

This is a if_elsestatement::: if (x > z)
            mx = x;
        else
            mx = z;
    

QUAT!!! GOTO LABEL_27   ::: 7
This is a factor statemnt::: y 

This is a term statemnt::: y 

This is a expression statemnt::: y 

This is a factor statemnt::: z

This is a term statemnt::: z

This is a expression statemnt::: z

QUAT!!! > y z  ::: 7
This is a condition ::: y > z

QUAT!!! BZ LABEL_30   ::: 7
This is a factor statemnt::: y

This is a term statemnt::: y

This is a expression statemnt::: y

QUAT!!! = mx y  ::: 7
This is an assign statement::: mx = y

QUAT!!! GOTO LABEL_31   ::: 7
This is a factor statemnt::: z

This is a term statemnt::: z

This is a expression statemnt::: z

QUAT!!! = mx z  ::: 7
This is an assign statement::: mx = z

This is a if_elsestatement::: if (y > z)
    mx = y;
    else mx = z;
    
    

This is a if_elsestatement::: if (x > y){
        if (x > z)
            mx = x;
        else
            mx = z;
    }
    else if (y > z)
    mx = y;
    else mx = z;
    
    

QUAT!!! PRINT "mx = " string  ::: 7
This is a factor statemnt::: mx

This is a term statemnt::: mx

This is a expression statemnt::: mx

QUAT!!! PRINT mx int  ::: 7
QUAT!!! PRINTLN    ::: 7
This is a printf statement::: printf("mx = ", mx)

This is a factor statemnt::: mx 

This is a term statemnt::: mx 

This is a expression statemnt::: mx 

This is a factor statemnt::: 10

This is a term statemnt::: 10

This is a expression statemnt::: 10

QUAT!!! == mx 10  ::: 7
This is a condition ::: mx == 10

QUAT!!! BZ LABEL_32   ::: 7
QUAT!!! PRINT "test_max success!" string  ::: 7
QUAT!!! PRINTLN    ::: 7
This is a printf statement::: printf("test_max success!")

QUAT!!! GOTO LABEL_33   ::: 7
QUAT!!! PRINT "test_max fail!" string  ::: 7
QUAT!!! PRINTLN    ::: 7
This is a printf statement::: printf("test_max fail!")

This is a if_elsestatement::: if (mx == 10)
        printf("test_max success!");
    else
        printf("test_max fail!");
    

QUAT!!! PRINT "************************" string  ::: 7
QUAT!!! PRINTLN    ::: 7
This is a printf statement::: printf("************************")

siz = 4176 now = 2270

QUAT!!! ret    ::: 7
cnt_tab 49 ::: test_for_1_loop void  0 0 0 &&& 8
QUAT!!! void_ test_for_1_loop   ::: 8
This is a void statement test_for_1_loop ::: 0 parameters::: void test_for_1_loop()

QUAT!!! BEGIN    ::: 8
QUAT!!! PRINT "************************" string  ::: 8
QUAT!!! PRINTLN    ::: 8
This is a printf statement::: printf("************************")

QUAT!!! PRINT "START test_for_1_loop" string  ::: 8
QUAT!!! PRINTLN    ::: 8
This is a printf statement::: printf("START test_for_1_loop")

This is a factor statemnt::: k

This is a term statemnt::: k

This is a factor statemnt::: 1

This is a term statemnt::: 1

QUAT!!! + #42 k 1 ::: 8
This is a expression statemnt::: k+1

QUAT!!! = i #42  ::: 8
This is a factor statemnt::: i

This is a term statemnt::: i

This is a expression statemnt::: i

This is a factor statemnt::: k

This is a term statemnt::: k

This is a factor statemnt::: i

This is a term statemnt::: i

QUAT!!! + #43 k i ::: 8
This is a expression statemnt::: k+i

QUAT!!! = a[i] #43  ::: 8
This is an assign statement::: a[i] = k+i

This is a factor statemnt::: i

This is a term statemnt::: i

This is a expression statemnt::: i

This is a factor statemnt::: ch

This is a term statemnt::: ch

This is a expression statemnt::: ch

QUAT!!! = s[i] ch  ::: 8
This is an assign statement::: s[i] = ch

This is a factor statemnt::: i 

This is a term statemnt::: i 

This is a expression statemnt::: i 

This is a factor statemnt::: 0

This is a term statemnt::: 0

This is a expression statemnt::: 0

QUAT!!! >= i 0  ::: 8
This is a condition ::: i >= 0

QUAT!!! BZ LABEL_35   ::: 8
QUAT!!! GOTO LABEL_34   ::: 8
This is a loop statement::: for (i = k+1; i >= 0; i = i - 1){
        a[i] = k+i;
        s[i] = ch;
    }
    

This is a factor statemnt::: 0

This is a term statemnt::: 0

This is a expression statemnt::: 0

QUAT!!! = i 0  ::: 8
This is a factor statemnt::: k 

This is a term statemnt::: k 

This is a factor statemnt::: 1

This is a term statemnt::: 1

QUAT!!! + #44 k 1 ::: 8
This is a expression statemnt::: k + 1

QUAT!!! = k #44  ::: 8
This is an assign statement::: k = k + 1

This is a factor statemnt::: i 

This is a term statemnt::: i 

This is a expression statemnt::: i 

This is a factor statemnt::: k

This is a term statemnt::: k

This is a expression statemnt::: k

QUAT!!! > i k  ::: 8
This is a condition ::: i > k

QUAT!!! BZ LABEL_37   ::: 8
QUAT!!! GOTO LABEL_36   ::: 8
This is a loop statement::: for (i = 0;  i > k; i = i-1) { 
        k = k + 1;
    }
    

QUAT!!! PRINT "k = " string  ::: 8
This is a factor statemnt::: k

This is a term statemnt::: k

This is a expression statemnt::: k

QUAT!!! PRINT k int  ::: 8
QUAT!!! PRINTLN    ::: 8
This is a printf statement::: printf("k = ", k)

QUAT!!! PRINT "ch = " string  ::: 8
This is a factor statemnt::: k

This is a term statemnt::: k

This is a expression statemnt::: k

QUAT!!! = #45 s[k]  ::: 8
This is a factor statemnt::: s[k]

This is a term statemnt::: s[k]

This is a expression statemnt::: s[k]

QUAT!!! PRINT #45 char  ::: 8
QUAT!!! PRINTLN    ::: 8
This is a printf statement::: printf("ch = ",s[k])

This is a factor statemnt::: k

This is a term statemnt::: k

This is a expression statemnt::: k

QUAT!!! = #46 s[k]  ::: 8
This is a factor statemnt::: s[k]

This is a term statemnt::: s[k]

This is a expression statemnt::: s[k]

This is a factor statemnt::: ch

This is a term statemnt::: ch

This is a expression statemnt::: ch

QUAT!!! == #46 ch  ::: 8
This is a condition ::: s[k]==ch

QUAT!!! BZ LABEL_38   ::: 8
QUAT!!! PRINT "test_for_1_loop success!" string  ::: 8
QUAT!!! PRINTLN    ::: 8
This is a printf statement::: printf("test_for_1_loop success!")

QUAT!!! GOTO LABEL_39   ::: 8
QUAT!!! PRINT "test_for_1_loop fail!" string  ::: 8
QUAT!!! PRINTLN    ::: 8
This is a printf statement::: printf("test_for_1_loop fail!")

This is a if_elsestatement::: if (s[k]==ch)
        printf("test_for_1_loop success!");
    else
        printf("test_for_1_loop fail!");
    

QUAT!!! PRINT "END test_for_1_loop" string  ::: 8
QUAT!!! PRINTLN    ::: 8
This is a printf statement::: printf("END test_for_1_loop")

QUAT!!! PRINT "************************" string  ::: 8
QUAT!!! PRINTLN    ::: 8
This is a printf statement::: printf("************************")

siz = 4176 now = 2753

QUAT!!! ret    ::: 8
cnt_tab 50 ::: test_for_2_loop void  0 0 0 &&& 9
QUAT!!! void_ test_for_2_loop   ::: 9
cnt_tab 51 ::: Int parameter int 0 1 0 &&& 9
QUAT!!! parameter_int Int   ::: 9
This is a void statement test_for_2_loop ::: 1 parameters::: void test_for_2_loop(int Int)

QUAT!!! BEGIN    ::: 9
QUAT!!! PRINT "************************" string  ::: 9
QUAT!!! PRINTLN    ::: 9
This is a printf statement::: printf("************************")

QUAT!!! PRINT "START test_for_2_loop" string  ::: 9
QUAT!!! PRINTLN    ::: 9
This is a printf statement::: printf("START test_for_2_loop")

This is a factor statemnt::: 0

This is a term statemnt::: 0

This is a factor statemnt::: -2

This is a term statemnt::: -2

QUAT!!! + #47 0 -2 ::: 9
This is a expression statemnt::: 0+-2

QUAT!!! = Int #47  ::: 9
This is an assign statement::: Int = 0+-2

QUAT!!! PRINT "Int=" string  ::: 9
This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a expression statemnt::: Int

QUAT!!! PRINT Int int  ::: 9
QUAT!!! PRINTLN    ::: 9
This is a printf statement::: printf("Int=",Int)

This is a factor statemnt::: Int 

This is a term statemnt::: Int 

This is a factor statemnt::: 1

This is a term statemnt::: 1

QUAT!!! + #48 Int 1 ::: 9
This is a expression statemnt::: Int +1

QUAT!!! = Int #48  ::: 9
This is an assign statement::: Int = Int +1

This is a factor statemnt::: Int 

This is a term statemnt::: Int 

This is a factor statemnt::: 1

This is a term statemnt::: 1

QUAT!!! + #49 Int 1 ::: 9
This is a expression statemnt::: Int +1

QUAT!!! = Int #49  ::: 9
This is an assign statement::: Int = Int +1

QUAT!!! PRINT "Int=" string  ::: 9
This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a expression statemnt::: Int

QUAT!!! PRINT Int int  ::: 9
QUAT!!! PRINTLN    ::: 9
This is a printf statement::: printf("Int=",Int)

This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a expression statemnt::: Int

QUAT!!! = i Int  ::: 9
This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a expression statemnt::: Int

QUAT!!! = i Int  ::: 9
This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a factor statemnt::: 1

This is a term statemnt::: 1

QUAT!!! + #50 Int 1 ::: 9
This is a expression statemnt::: Int+1

QUAT!!! = Int #50  ::: 9
This is an assign statement::: Int = Int+1

This is a factor statemnt::: i 

This is a term statemnt::: i 

This is a expression statemnt::: i 

This is a factor statemnt::: i

This is a term statemnt::: i

This is a factor statemnt::: 1

This is a term statemnt::: 1

QUAT!!! - #51 i 1 ::: 9
This is a expression statemnt::: i-1

QUAT!!! <= i #51  ::: 9
This is a condition ::: i <= i-1

QUAT!!! BZ LABEL_42   ::: 9
QUAT!!! GOTO LABEL_41   ::: 9
This is a loop statement::: for (i = Int; i <= i-1; i = i+1){
            Int = Int+1;
        }
    

This is a factor statemnt::: i 

This is a term statemnt::: i 

This is a expression statemnt::: i 

This is a factor statemnt::: 1000

This is a term statemnt::: 1000

This is a factor statemnt::: Int

This is a term statemnt::: Int

QUAT!!! - #52 1000 Int ::: 9
This is a expression statemnt::: 1000-Int

QUAT!!! <= i #52  ::: 9
This is a condition ::: i <= 1000-Int

QUAT!!! BZ LABEL_43   ::: 9
QUAT!!! GOTO LABEL_40   ::: 9
This is a loop statement::: for (i = Int; i <= 1000-Int; i = i+1){
        for (i = Int; i <= i-1; i = i+1){
            Int = Int+1;
        }
    }
    

QUAT!!! PRINT "Int=" string  ::: 9
This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a expression statemnt::: Int

QUAT!!! PRINT Int int  ::: 9
QUAT!!! PRINTLN    ::: 9
This is a printf statement::: printf("Int=",Int)

This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a expression statemnt::: Int

This is a factor statemnt::: 500

This is a term statemnt::: 500

This is a expression statemnt::: 500

QUAT!!! == Int 500  ::: 9
This is a condition ::: Int==500

QUAT!!! BZ LABEL_44   ::: 9
QUAT!!! PRINT "test_for_2_loop success!" string  ::: 9
QUAT!!! PRINTLN    ::: 9
This is a printf statement::: printf("test_for_2_loop success!")

QUAT!!! GOTO LABEL_45   ::: 9
QUAT!!! PRINT "test_for_2_loop fail!" string  ::: 9
QUAT!!! PRINTLN    ::: 9
This is a printf statement::: printf("test_for_2_loop fail!")

This is a if_elsestatement::: if (Int==500)
        printf("test_for_2_loop success!");
    else
        printf("test_for_2_loop fail!");
    

QUAT!!! PRINT "END test_for_2_loop" string  ::: 9
QUAT!!! PRINTLN    ::: 9
This is a printf statement::: printf("END test_for_2_loop")

QUAT!!! PRINT "************************" string  ::: 9
QUAT!!! PRINTLN    ::: 9
This is a printf statement::: printf("************************")

siz = 4176 now = 3379

QUAT!!! ret    ::: 9
cnt_tab 52 ::: test_call function int 0 0 0 &&& 10
QUAT!!! function_int test_call   ::: 10
This is a functionint statement test_call ::: 0 parameters::: int test_call()

QUAT!!! BEGIN    ::: 10
This is a factor statemnt::: 2

This is a term statemnt::: 2

This is a expression statemnt::: 2

QUAT!!! PUSH 2 1  ::: 10
This is a factor statemnt::: 2

This is a term statemnt::: 2

This is a expression statemnt::: 2

QUAT!!! PUSH 2 1  ::: 10
This is a factor statemnt::: 3

This is a factor statemnt::: 5

QUAT!!! * #53 3 5 ::: 10
This is a term statemnt::: 3*5

This is a expression statemnt::: 3*5

QUAT!!! PUSH #53 2  ::: 10
This is a parameter with ::: 2 parameters::: 2,3*5

This is function_call statement::: mymax(2,3*5)

QUAT!!! call mymax   ::: 10
QUAT!!! = #54 RET_int  ::: 10
This is a factor statemnt::: mymax(2,3*5)

This is a factor statemnt::: 2

This is a term statemnt::: 2

This is a expression statemnt::: 2

QUAT!!! PUSH 2 1  ::: 10
This is a factor statemnt::: 4

This is a term statemnt::: 4

This is a expression statemnt::: 4

QUAT!!! PUSH 4 2  ::: 10
This is a parameter with ::: 2 parameters::: 2, 4

This is function_call statement::: mymax(2, 4)

QUAT!!! call mymax   ::: 10
QUAT!!! = #55 RET_int  ::: 10
This is a factor statemnt::: mymax(2, 4)

QUAT!!! / #56 #54 #55 ::: 10
This is a factor statemnt::: 100

This is a term statemnt::: 100

This is a factor statemnt::: 1

This is a term statemnt::: 1

QUAT!!! - #57 100 1 ::: 10
This is a expression statemnt::: 100-1

This is a factor statemnt::: (100-1)

QUAT!!! * #58 #56 #57 ::: 10
This is a term statemnt::: mymax(2,3*5)/mymax(2, 4)*(100-1)

This is a expression statemnt::: mymax(2,3*5)/mymax(2, 4)*(100-1)

QUAT!!! PUSH #58 2  ::: 10
This is a parameter with ::: 2 parameters::: 2, mymax(2,3*5)/mymax(2, 4)*(100-1)

This is function_call statement::: mymax(2, mymax(2,3*5)/mymax(2, 4)*(100-1))

QUAT!!! call mymax   ::: 10
QUAT!!! = #59 RET_int  ::: 10
This is a factor statemnt::: mymax(2, mymax(2,3*5)/mymax(2, 4)*(100-1))

This is a term statemnt::: mymax(2, mymax(2,3*5)/mymax(2, 4)*(100-1))

This is a expression statemnt::: mymax(2, mymax(2,3*5)/mymax(2, 4)*(100-1))

This is a return statement::: return (mymax(2, mymax(2,3*5)/mymax(2, 4)*(100-1)))

QUAT!!! ret #59   ::: 10
siz = 4176 now = 3456

cnt_tab 53 ::: main void  0 0 0 &&& 11
QUAT!!! void_ main   ::: 11
QUAT!!! BEGIN    ::: 11
This is function_call statement::: init()

QUAT!!! call init   ::: 11
This is a factor statemnt::: 0

This is a term statemnt::: 0

This is a expression statemnt::: 0

QUAT!!! = i 0  ::: 11
This is a factor statemnt::: m 

This is a term statemnt::: m 

This is a factor statemnt::: i

This is a term statemnt::: i

QUAT!!! - #60 m i ::: 11
This is a expression statemnt::: m - i

QUAT!!! = j #60  ::: 11
This is an assign statement::: j = m - i

This is a factor statemnt::: i 

This is a term statemnt::: i 

This is a expression statemnt::: i 

This is a factor statemnt::: 0

This is a term statemnt::: 0

This is a expression statemnt::: 0

QUAT!!! == i 0  ::: 11
This is a condition ::: i == 0

QUAT!!! BZ LABEL_47   ::: 11
QUAT!!! PRINT "************************" string  ::: 11
QUAT!!! PRINTLN    ::: 11
This is a printf statement::: printf("************************")

QUAT!!! PRINT "START work" string  ::: 11
QUAT!!! PRINTLN    ::: 11
This is a printf statement::: printf("START work")

QUAT!!! PRINT "C(n,m) is Odd or Even:" string  ::: 11
This is a factor statemnt::: j

This is a term statemnt::: j

This is a expression statemnt::: j

QUAT!!! PUSH j 1  ::: 11
This is a factor statemnt::: n

This is a term statemnt::: n

This is a expression statemnt::: n

QUAT!!! PUSH n 2  ::: 11
This is a parameter with ::: 2 parameters::: j,n

This is function_call statement::: work(j,n)

QUAT!!! call work   ::: 11
QUAT!!! = #61 RET_char  ::: 11
This is a factor statemnt::: work(j,n)

This is a term statemnt::: work(j,n)

This is a expression statemnt::: work(j,n)

QUAT!!! PRINT #61 char  ::: 11
QUAT!!! PRINTLN    ::: 11
This is a printf statement::: printf("C(n,m) is Odd or Even:",work(j,n))

QUAT!!! PRINT "END WORK" string  ::: 11
QUAT!!! PRINTLN    ::: 11
This is a printf statement::: printf("END WORK")

QUAT!!! PRINT "************************" string  ::: 11
QUAT!!! PRINTLN    ::: 11
This is a printf statement::: printf("************************")

This is a ifstatement::: if (i == 0){
            printf("************************");
            printf("START work");
            printf("C(n,m) is Odd or Even:",work(j,n));
            printf("END WORK");
            printf("************************");
        }
       

QUAT!!! PRINT "N:" string  ::: 11
This is a factor statemnt::: n

This is a term statemnt::: n

This is a expression statemnt::: n

QUAT!!! PRINT n int  ::: 11
QUAT!!! PRINTLN    ::: 11
This is a printf statement::: printf("N:",n)

QUAT!!! PRINT "M:" string  ::: 11
This is a factor statemnt::: j

This is a term statemnt::: j

This is a expression statemnt::: j

QUAT!!! PRINT j int  ::: 11
QUAT!!! PRINTLN    ::: 11
This is a printf statement::: printf("M:",j)

QUAT!!! PRINT "C:" string  ::: 11
This is a factor statemnt::: j

This is a term statemnt::: j

This is a expression statemnt::: j

QUAT!!! PUSH j 1  ::: 11
This is a factor statemnt::: n

This is a term statemnt::: n

This is a expression statemnt::: n

QUAT!!! PUSH n 2  ::: 11
This is a parameter with ::: 2 parameters::: j, n

This is function_call statement::: C(j, n)

QUAT!!! call C   ::: 11
QUAT!!! = #62 RET_int  ::: 11
This is a factor statemnt::: C(j, n)

This is a term statemnt::: C(j, n)

This is a expression statemnt::: C(j, n)

QUAT!!! PRINT #62 int  ::: 11
QUAT!!! PRINTLN    ::: 11
This is a printf statement::: printf("C:",C(j, n))

QUAT!!! PRINT "************************" string  ::: 11
QUAT!!! PRINTLN    ::: 11
This is a printf statement::: printf("************************")

This is a factor statemnt::: i 

This is a term statemnt::: i 

This is a expression statemnt::: i 

This is a factor statemnt::: m

This is a term statemnt::: m

This is a expression statemnt::: m

QUAT!!! <= i m  ::: 11
This is a condition ::: i <= m

QUAT!!! BZ LABEL_49   ::: 11
QUAT!!! GOTO LABEL_46   ::: 11
This is a loop statement::: for (i = 0;  i <= m; i = i +1) { 
        j = m - i;
        if (i == 0){
            printf("************************");
            printf("START work");
            printf("C(n,m) is Odd or Even:",work(j,n));
            printf("END WORK");
            printf("************************");
        }
       printf("N:",n);
       printf("M:",j);
       printf("C:",C(j, n)); 
       printf("************************");
    }
    
    

This is function_call statement::: test_max()

QUAT!!! call test_max   ::: 11
This is function_call statement::: test_for_1_loop()

QUAT!!! call test_for_1_loop   ::: 11
This is function_call statement::: test_switch()

QUAT!!! call test_switch   ::: 11
This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: 1

QUAT!!! PUSH 1 1  ::: 11
This is a parameter with ::: 1 parameters::: 1

This is function_call statement::: test_for_2_loop(1)

QUAT!!! call test_for_2_loop   ::: 11
This is function_call statement::: test_call()

QUAT!!! call test_call   ::: 11
QUAT!!! = #63 RET_int  ::: 11
This is a factor statemnt::: test_call()

This is a term statemnt::: test_call()

This is a expression statemnt::: test_call()

This is a factor statemnt::: 297

This is a term statemnt::: 297

This is a expression statemnt::: 297

QUAT!!! == #63 297  ::: 11
This is a condition ::: test_call()==297

QUAT!!! BZ LABEL_50   ::: 11
QUAT!!! PRINT "Success test_call=" string  ::: 11
This is function_call statement::: test_call()

QUAT!!! call test_call   ::: 11
QUAT!!! = #64 RET_int  ::: 11
This is a factor statemnt::: test_call()

This is a term statemnt::: test_call()

This is a expression statemnt::: test_call()

QUAT!!! PRINT #64 int  ::: 11
QUAT!!! PRINTLN    ::: 11
This is a printf statement::: printf("Success test_call=",test_call())

QUAT!!! GOTO LABEL_51   ::: 11
QUAT!!! PRINT "Fail test_call" string  ::: 11
QUAT!!! PRINTLN    ::: 11
This is a printf statement::: printf("Fail test_call")

This is a if_elsestatement::: if (test_call()==297)
        printf("Success test_call=",test_call());
    else
        printf("Fail test_call");
    

QUAT!!! PRINT "************************" string  ::: 11
QUAT!!! PRINTLN    ::: 11
This is a printf statement::: printf("************************")

QUAT!!! ret    ::: 11
This is a return statement::: return 

siz = 4176 now = 4176

------------------------------
------------------------------
------------------------------
const int N = 100
const int M = 10000
const int K = 0
const char ch1 = 43
const char ch2 = 45
const char ch3 = 42
const char ch4 = 47
const char ch5 = 95
const char ch6 = 97
const char ch7 = 48
const char ch8 = 75
const char ch9 = 57
var int a[10000]
var int i
var int j
var int n
var int m
var int k
var int x
var int y
var int z
var int mx
var char ch
var char s[10000]
int mymax()
para int x
para int y
const int ppp = 1
const int qqq = 9999
var int ans
BEGIN
ans = x
y > x
BZ LABEL_1
ans = y
GOTO LABEL_2
LABEL_1 LABEL_2 ret ans
int factorial()
para int n
var int res
BEGIN
n < 0
BZ LABEL_3
#1 = -1 * 1
ret #1
LABEL_3 SWITCH n
n == 0
BZ LABEL_6
res = 1
GOTO LABEL_8
LABEL_6 n == 1
BZ LABEL_7
res = 1
GOTO LABEL_8
LABEL_7 #2 = n - 1
PUSH #2
call factorial
#3 = RET_int
#4 = n * #3
res = #4
LABEL_8 ret res
int C()
para int m
para int n
var int x
var int y
var int z
BEGIN
m <= n
BZ LABEL_9
LABEL_9 m > n
BZ LABEL_11
#5 = -1 * 1
ret #5
LABEL_11 PUSH n
call factorial
#6 = RET_int
PUSH m
call factorial
#7 = RET_int
#8 = #6 / #7
#9 = n - m
PUSH #9
call factorial
#10 = RET_int
#11 = #8 / #10
ret #11
void init
BEGIN
PRINT_string "Please enter n,m,k,ch:"
PRINTLN
m = 5
READ n
READ m
READ k
READ ch
PRINT_string ""
PRINTLN
ret 
char work()
para int m
para int n
var int ans
BEGIN
PUSH m
PUSH n
call C
#12 = RET_int
ans = #12
#13 = ans / 2
#14 = 2 * #13
#15 = ans - #14
SWITCH #15
#15 == 1
BZ LABEL_14
ret 'O'
GOTO LABEL_16
LABEL_14 #15 == -1
BZ LABEL_15
ret 'O'
GOTO LABEL_16
LABEL_15 ret 'E'
LABEL_16 ret '*'
void test_switch
var int Int
var int a[1000]
BEGIN
PRINT_string "************************"
PRINTLN
PRINT_string "START test_switch"
PRINTLN
#16 = -1 * 1
a[2] = #16
#17 = -1 * 2
a[1] = #17
#18 = 2 * 5
#19 = #18 / 4
Int = #19
PRINT_string "Int="
PRINT_int Int
PRINTLN
#20 = 2 * 5
#21 = #20 / 4
#22 = a[#21]
Int = #22
PRINT_string "Int="
PRINT_int Int
PRINTLN
#23 = 2 * 5
#24 = #23 / 4
#25 = a[#24]
#26 = 2 + #25
#27 = a[#26]
Int = #27
PRINT_string "Int="
PRINT_int Int
PRINTLN
#28 = 2 * 5
#29 = #28 / 4
#30 = a[#29]
#31 = 2 + #30
#32 = a[#31]
#33 = #32 + 3
#34 = a[#33]
Int = #34
PRINT_string "Int="
PRINT_int Int
PRINTLN
SWITCH Int
Int == -1
BZ LABEL_18
PRINT_string "fail_switch1"
PRINTLN
GOTO LABEL_20
LABEL_18 Int == -2
BZ LABEL_19
PRINT_string "success_switch1"
PRINTLN
GOTO LABEL_20
LABEL_19 LABEL_20 #35 = Int + 1
#36 = #35 + 'b'
SWITCH #36
#36 == 1
BZ LABEL_22
#37 = Int + 1
Int = #37
GOTO LABEL_25
LABEL_22 #36 == 97
BZ LABEL_23
PRINT_string "success_switch2"
PRINTLN
GOTO LABEL_25
LABEL_23 #36 == -123
BZ LABEL_24
PRINT_string "fail_switch1"
PRINT_int Int
PRINTLN
PRINT_int Int
PRINTLN
GOTO LABEL_25
LABEL_24 PRINT_string "FAIL_switch1"
PRINTLN
LABEL_25 PRINT_string "END test_switch"
PRINTLN
PRINT_string "************************"
PRINTLN
ret 
void test_max
BEGIN
PRINT_string "************************"
PRINTLN
PUSH 1
#38 = -1 * -2
PUSH #38
call mymax
#39 = RET_int
x = #39
#40 = x + +8
PUSH #40
PUSH 9
call mymax
#41 = RET_int
x = #41
y = 4
z = 7
x > y
BZ LABEL_26
x > z
BZ LABEL_28
mx = x
GOTO LABEL_29
LABEL_28 mx = z
LABEL_29 GOTO LABEL_27
LABEL_26 y > z
BZ LABEL_30
mx = y
GOTO LABEL_31
LABEL_30 mx = z
LABEL_31 LABEL_27 PRINT_string "mx = "
PRINT_int mx
PRINTLN
mx == 10
BZ LABEL_32
PRINT_string "test_max success!"
PRINTLN
GOTO LABEL_33
LABEL_32 PRINT_string "test_max fail!"
PRINTLN
LABEL_33 PRINT_string "************************"
PRINTLN
ret 
void test_for_1_loop
BEGIN
PRINT_string "************************"
PRINTLN
PRINT_string "START test_for_1_loop"
PRINTLN
#42 = k + 1
i = #42
LABEL_34 #43 = k + i
a[i] = #43
s[i] = ch
i = i - 1
i >= 0
BZ LABEL_35
GOTO LABEL_34
LABEL_35 i = 0
LABEL_36 #44 = k + 1
k = #44
i = i - 1
i > k
BZ LABEL_37
GOTO LABEL_36
LABEL_37 PRINT_string "k = "
PRINT_int k
PRINTLN
PRINT_string "ch = "
#45 = s[k]
PRINT_char #45
PRINTLN
#46 = s[k]
#46 == ch
BZ LABEL_38
PRINT_string "test_for_1_loop success!"
PRINTLN
GOTO LABEL_39
LABEL_38 PRINT_string "test_for_1_loop fail!"
PRINTLN
LABEL_39 PRINT_string "END test_for_1_loop"
PRINTLN
PRINT_string "************************"
PRINTLN
ret 
void test_for_2_loop
para int Int
BEGIN
PRINT_string "************************"
PRINTLN
PRINT_string "START test_for_2_loop"
PRINTLN
#47 = 0 + -2
Int = #47
PRINT_string "Int="
PRINT_int Int
PRINTLN
#48 = Int + 1
Int = #48
#49 = Int + 1
Int = #49
PRINT_string "Int="
PRINT_int Int
PRINTLN
i = Int
LABEL_40 i = Int
LABEL_41 #50 = Int + 1
Int = #50
i = i + 1
#51 = i - 1
i <= #51
BZ LABEL_42
GOTO LABEL_41
LABEL_42 i = i + 1
#52 = 1000 - Int
i <= #52
BZ LABEL_43
GOTO LABEL_40
LABEL_43 PRINT_string "Int="
PRINT_int Int
PRINTLN
Int == 500
BZ LABEL_44
PRINT_string "test_for_2_loop success!"
PRINTLN
GOTO LABEL_45
LABEL_44 PRINT_string "test_for_2_loop fail!"
PRINTLN
LABEL_45 PRINT_string "END test_for_2_loop"
PRINTLN
PRINT_string "************************"
PRINTLN
ret 
int test_call()
BEGIN
PUSH 2
PUSH 2
#53 = 3 * 5
PUSH #53
call mymax
#54 = RET_int
PUSH 2
PUSH 4
call mymax
#55 = RET_int
#56 = #54 / #55
#57 = 100 - 1
#58 = #56 * #57
PUSH #58
call mymax
#59 = RET_int
ret #59
void main
BEGIN
call init
i = 0
LABEL_46 #60 = m - i
j = #60
i == 0
BZ LABEL_47
PRINT_string "************************"
PRINTLN
PRINT_string "START work"
PRINTLN
PRINT_string "C(n,m) is Odd or Even:"
PUSH j
PUSH n
call work
#61 = RET_char
PRINT_char #61
PRINTLN
PRINT_string "END WORK"
PRINTLN
PRINT_string "************************"
PRINTLN
LABEL_47 PRINT_string "N:"
PRINT_int n
PRINTLN
PRINT_string "M:"
PRINT_int j
PRINTLN
PRINT_string "C:"
PUSH j
PUSH n
call C
#62 = RET_int
PRINT_int #62
PRINTLN
PRINT_string "************************"
PRINTLN
i = i + 1
i <= m
BZ LABEL_49
GOTO LABEL_46
LABEL_49 call test_max
call test_for_1_loop
call test_switch
PUSH 1
call test_for_2_loop
call test_call
#63 = RET_int
#63 == 297
BZ LABEL_50
PRINT_string "Success test_call="
call test_call
#64 = RET_int
PRINT_int #64
PRINTLN
GOTO LABEL_51
LABEL_50 PRINT_string "Fail test_call"
PRINTLN
LABEL_51 PRINT_string "************************"
PRINTLN
ret 
------------------------------
------------------------------
------------------------------
Program 1 :  25
Program 2 :  31
Program 3 :  34
Program 4 :  40
Program 5 :  41
Program 6 :  45
Program 7 :  48
Program 8 :  49
Program 9 :  50
Program 10 :  52
Program 11 :  53
AddByMe Program 12 :  54
------------------------------
------------------------------
------------------------------
Symbol 1 :  N const int 100 1 0 0
Symbol 2 :  M const int 10000 2 0 0
Symbol 3 :  K const int 0 3 0 0
Symbol 4 :  ch1 const char 43 4 0 0
Symbol 5 :  ch2 const char 45 5 0 0
Symbol 6 :  ch3 const char 42 6 0 0
Symbol 7 :  ch4 const char 47 7 0 0
Symbol 8 :  ch5 const char 95 8 0 0
Symbol 9 :  ch6 const char 97 9 0 0
Symbol 10 :  ch7 const char 48 10 0 0
Symbol 11 :  ch8 const char 75 11 0 0
Symbol 12 :  ch9 const char 57 12 0 0
Symbol 13 :  a variable int[] 0 13 10000 0
Symbol 14 :  i variable int 0 14 0 0
Symbol 15 :  j variable int 0 15 0 0
Symbol 16 :  n variable int 0 16 0 0
Symbol 17 :  m variable int 0 17 0 0
Symbol 18 :  k variable int 0 18 0 0
Symbol 19 :  x variable int 0 19 0 0
Symbol 20 :  y variable int 0 20 0 0
Symbol 21 :  z variable int 0 21 0 0
Symbol 22 :  mx variable int 0 22 0 0
Symbol 23 :  ch variable char 0 23 0 0
Symbol 24 :  s variable char[] 0 24 10000 0
Symbol 25 :  mymax function int 0 0 2 1
Symbol 26 :  x parameter int 0 1 0 1
Symbol 27 :  y parameter int 0 2 0 1
Symbol 28 :  ppp const int 1 3 0 1
Symbol 29 :  qqq const int 9999 4 0 1
Symbol 30 :  ans variable int 0 5 0 1
Symbol 31 :  factorial function int 0 0 1 2
Symbol 32 :  n parameter int 0 1 0 2
Symbol 33 :  res variable int 0 2 0 2
Symbol 34 :  C function int 0 0 2 3
Symbol 35 :  m parameter int 0 1 0 3
Symbol 36 :  n parameter int 0 2 0 3
Symbol 37 :  x variable int 0 3 0 3
Symbol 38 :  y variable int 0 4 0 3
Symbol 39 :  z variable int 0 5 0 3
Symbol 40 :  init void  0 0 0 4
Symbol 41 :  work function char 0 0 2 5
Symbol 42 :  m parameter int 0 1 0 5
Symbol 43 :  n parameter int 0 2 0 5
Symbol 44 :  ans variable int 0 3 0 5
Symbol 45 :  test_switch void  0 0 0 6
Symbol 46 :  Int variable int 0 1 0 6
Symbol 47 :  a variable int[] 0 2 1000 6
Symbol 48 :  test_max void  0 0 0 7
Symbol 49 :  test_for_1_loop void  0 0 0 8
Symbol 50 :  test_for_2_loop void  0 0 1 9
Symbol 51 :  Int parameter int 0 1 0 9
Symbol 52 :  test_call function int 0 0 0 10
Symbol 53 :  main void  0 0 0 11
------------------------------
------------------------------
------------------------------
25 2 1
38 1 2
#1 ::: 2 6
#2 ::: 2 7
#3 ::: 2 8
#4 ::: 2 9
62 2 3
#5 ::: 3 9
#6 ::: 3 10
#7 ::: 3 11
#8 ::: 3 12
#9 ::: 3 13
#10 ::: 3 14
#11 ::: 3 15
88 0 4
100 2 5
#12 ::: 5 7
#13 ::: 5 8
#14 ::: 5 9
#15 ::: 5 10
124 0 6
#16 ::: 6 1005
#17 ::: 6 1006
#18 ::: 6 1007
#19 ::: 6 1008
#20 ::: 6 1009
#21 ::: 6 1010
#22 ::: 6 1011
#23 ::: 6 1012
#24 ::: 6 1013
#25 ::: 6 1014
#26 ::: 6 1015
#27 ::: 6 1016
#28 ::: 6 1017
#29 ::: 6 1018
#30 ::: 6 1019
#31 ::: 6 1020
#32 ::: 6 1021
#33 ::: 6 1022
#34 ::: 6 1023
#35 ::: 6 1024
#36 ::: 6 1025
#37 ::: 6 1026
208 0 7
#38 ::: 7 4
#39 ::: 7 5
#40 ::: 7 6
#41 ::: 7 7
252 0 8
#42 ::: 8 4
#43 ::: 8 5
#44 ::: 8 6
#45 ::: 8 7
#46 ::: 8 8
294 1 9
#47 ::: 9 5
#48 ::: 9 6
#49 ::: 9 7
#50 ::: 9 8
#51 ::: 9 9
#52 ::: 9 10
342 0 10
#53 ::: 10 4
#54 ::: 10 5
#55 ::: 10 6
#56 ::: 10 7
#57 ::: 10 8
#58 ::: 10 9
#59 ::: 10 10
361 0 11
#60 ::: 11 4
#61 ::: 11 5
#62 ::: 11 6
#63 ::: 11 7
#64 ::: 11 8
------------------------------
------------------------------
------------------------------
