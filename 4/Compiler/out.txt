This is a const_int statement::: 2elements::: const int N = 100, M = -10000

This is a const_int statement::: 1elements::: const int K = 0

This is a const_char statement::: 9elements::: const char ch1 = '+', ch2 = '-', ch3 = '*', ch4 = '/', ch5 = '_', ch6 = 'a', ch7 = '0', ch8 = '"', ch9 = '9'

This is a variable_int statement::: 10 variables::: int a[100],  i, j, n, m, k, x, y, z, mx

This is a variable_char statement::: 2 variables::: 
char ch, s[10000]

This is a function_int statement mymax ::: 2 parameters::: int mymax(int x, int y)

This is a variable_int statement::: 1 variables::: int ans

This is a factor statemnt::: x

This is a term statemnt::: x

This is a expression statemnt::: x

This is an assign statement::: ans = x

This is a factor statemnt::: y 

This is a term statemnt::: y 

This is a expression statemnt::: y 

This is a factor statemnt::: x

This is a term statemnt::: x

This is a expression statemnt::: x

This is a condition ::: y > x

This is a factor statemnt::: y

This is a term statemnt::: y

This is a expression statemnt::: y

This is an assign statement::: ans = y

This is a if_elsestatement::: if (y > x){
        ans = y;
    }
    else
    ;
    

This is a factor statemnt::: ans

This is a term statemnt::: ans

This is a expression statemnt::: ans

This is a return statement::: return (ans)

siz = 2519 now = 346

This is a function_int statement factorial ::: 1 parameters::: int factorial(int n)

This is a variable_int statement::: 1 variables::: int res

This is a factor statemnt::: n 

This is a term statemnt::: n 

This is a expression statemnt::: n 

This is a factor statemnt::: 0

This is a term statemnt::: 0

This is a expression statemnt::: 0

This is a condition ::: n < 0

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: -1

This is a return statement::: return (-1)

This is a ifstatement::: if (n < 0)
        return (-1);
    

This is a factor statemnt::: n

This is a term statemnt::: n

This is a expression statemnt::: n

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: 1

This is an assign statement::: res = 1

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: 1

This is an assign statement::: res = 1

This is cases statement with::: 2 cases::: case 0: res = 1; 
        case 1: res = 1; 
        

This is a factor statemnt::: n

This is a factor statemnt::: n

This is a term statemnt::: n

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: n-1

This is a parameter with ::: 1 parameters::: n-1

This is function_call statement::: factorial(n-1)

This is a factor statemnt::: factorial(n-1)

This is a term statemnt::: n*factorial(n-1)

This is a expression statemnt::: n*factorial(n-1)

This is a factor statemnt::: (n*factorial(n-1))

This is a term statemnt::: (n*factorial(n-1))

This is a expression statemnt::: (n*factorial(n-1))

This is an assign statement::: res = (n*factorial(n-1))

This is a default statement::: default:  res = (n*factorial(n-1));
    

This is a switch statement::: switch (n){
        case 0: res = 1; 
        case 1: res = 1; 
        default:  res = (n*factorial(n-1));
    }
    

This is a factor statemnt::: res

This is a term statemnt::: res

This is a expression statemnt::: res

This is a return statement::: return (res)

siz = 2519 now = 556

This is a function_int statement C ::: 2 parameters::: int C(int m, int n)

This is a factor statemnt::: m 

This is a term statemnt::: m 

This is a expression statemnt::: m 

This is a factor statemnt::: n

This is a term statemnt::: n

This is a expression statemnt::: n

This is a condition ::: m <= n

This is a ifstatement::: if (m <= n) ;
    
    

This is a factor statemnt::: m 

This is a term statemnt::: m 

This is a expression statemnt::: m 

This is a factor statemnt::: n

This is a term statemnt::: n

This is a expression statemnt::: n

This is a condition ::: m > n

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: -1

This is a return statement::: return (-1)

This is a ifstatement::: if (m > n)
        return (-1);
    

This is a factor statemnt::: n

This is a term statemnt::: n

This is a expression statemnt::: n

This is a parameter with ::: 1 parameters::: n

This is function_call statement::: factorial(n)

This is a factor statemnt::: factorial(n)

This is a factor statemnt::: m

This is a term statemnt::: m

This is a expression statemnt::: m

This is a parameter with ::: 1 parameters::: m

This is function_call statement::: factorial(m)

This is a factor statemnt::: factorial(m)

This is a factor statemnt::: n

This is a term statemnt::: n

This is a factor statemnt::: m

This is a term statemnt::: m

This is a expression statemnt::: n-m

This is a parameter with ::: 1 parameters::: n-m

This is function_call statement::: factorial(n-m)

This is a factor statemnt::: factorial(n-m)

This is a term statemnt::: factorial(n)/factorial(m)/factorial(n-m)

This is a expression statemnt::: factorial(n)/factorial(m)/factorial(n-m)

This is a return statement::: return (factorial(n)/factorial(m)/factorial(n-m))

siz = 2519 now = 695

This is a void statement init ::: 0 parameters::: void init()

This is a factor statemnt::: 5

This is a term statemnt::: 5

This is a expression statemnt::: 5

This is an assign statement::: m = 5

This is a scanf statement::: 4 variables::: scanf(n,m,k, ch)

This is a return statement::: return 

siz = 2519 now = 756

This is a function_char statement work ::: 2 parameters::: char work(int m, int n)

This is a variable_int statement::: 1 variables::: int ans

This is a factor statemnt::: m

This is a term statemnt::: m

This is a expression statemnt::: m

This is a factor statemnt::: n

This is a term statemnt::: n

This is a expression statemnt::: n

This is a parameter with ::: 2 parameters::: m,n

This is function_call statement::: C(m,n)

This is a factor statemnt::: C(m,n)

This is a term statemnt::: C(m,n)

This is a expression statemnt::: C(m,n)

This is an assign statement::: ans = C(m,n)

This is a factor statemnt::: ans 

This is a term statemnt::: ans 

This is a factor statemnt::: 2

This is a factor statemnt::: ans 

This is a factor statemnt::: 2

This is a term statemnt::: ans / 2

This is a expression statemnt::: ans / 2

This is a factor statemnt::: (ans / 2)

This is a term statemnt::: 2*(ans / 2)

This is a expression statemnt::: ans - 2*(ans / 2)

This is a factor statemnt::: 'O'

This is a term statemnt::: 'O'

This is a expression statemnt::: 'O'

This is a return statement::: return ('O')

This is cases statement with::: 1 cases::: case 1: return ('O'); 
        

This is a factor statemnt::: 'E'

This is a term statemnt::: 'E'

This is a expression statemnt::: 'E'

This is a return statement::: return ('E')

This is a default statement::: default: return ('E'); 
    

This is a switch statement::: switch (ans - 2*(ans / 2)){ 
        case 1: return ('O'); 
        default: return ('E'); 
    }
    

This is a factor statemnt::: '*'

This is a term statemnt::: '*'

This is a expression statemnt::: '*'

This is a return statement::: return ('*')

siz = 2519 now = 935

This is a void statement test_switch ::: 0 parameters::: void test_switch()

This is a variable_int statement::: 2 variables::: int Int, a[1000]

This is a factor statemnt::: 2

This is a term statemnt::: 2

This is a expression statemnt::: 2

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: -1

This is an assign statement::: a[2] = -1

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: 1

This is a factor statemnt::: 2

This is a term statemnt::: 2

This is a expression statemnt::: -2

This is an assign statement::: a[1] = -2

This is a factor statemnt::: 2

This is a term statemnt::: 2

This is a factor statemnt::: 2

This is a factor statemnt::: 5

This is a factor statemnt::: 4

This is a term statemnt::: 2*5/4

This is a expression statemnt::: 2*5/4

This is a factor statemnt::: a[2*5/4]

This is a term statemnt::: a[2*5/4]

This is a expression statemnt::: 2+a[2*5/4]

This is a factor statemnt::: a[2+a[2*5/4]]

This is a term statemnt::: a[2+a[2*5/4]]

This is a expression statemnt::: a[2+a[2*5/4]]

This is a factor statemnt::: a[a[2+a[2*5/4]]]

This is a term statemnt::: a[a[2+a[2*5/4]]]

This is a expression statemnt::: a[a[2+a[2*5/4]]]

This is an assign statement::: Int = a[a[2+a[2*5/4]]]

This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a expression statemnt::: Int

This is a printf statement::: printf("666666")

This is a printf statement::: printf("HHHHH")

This is cases statement with::: 2 cases::: case -1: printf("666666");
        case -2: {printf("HHHHH"); }
        

This is a default statement::: default: ;
    

This is a switch statement::: switch (Int){
        case -1: printf("666666");
        case -2: {printf("HHHHH"); }
        default: ;
    }

    

This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a factor statemnt::: 'b'

This is a term statemnt::: 'b'

This is a expression statemnt::: Int+'b'

This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: Int+1

This is an assign statement::: Int = Int+1

This is a printf statement::: printf("23333")

This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a expression statemnt::: Int

This is a printf statement::: printf("*****",Int)

This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a expression statemnt::: Int

This is a printf statement::: printf(Int)

This is cases statement with::: 3 cases::: case 1: Int = Int+1;
        case 'a': {printf("23333");  }
        case -123: {printf("*****",Int);  printf(Int); }
        

This is a scanf statement::: 3 variables::: scanf(Int,Int,Int)

This is a default statement::: default: {scanf(Int,Int,Int);}
    

This is a switch statement::: switch (Int+'b'){
        case 1: Int = Int+1;
        case 'a': {printf("23333");  }
        case -123: {printf("*****",Int);  printf(Int); }
        default: {scanf(Int,Int,Int);}
    }
    

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: 1

This is a factor statemnt::: a[1]

This is a term statemnt::: a[1]

This is a expression statemnt::: 1-a[1]

This is a factor statemnt::: a[1-a[1]]

This is a term statemnt::: a[1-a[1]]

This is a expression statemnt::: a[1-a[1]]

This is a factor statemnt::: a[a[1-a[1]]]

This is a term statemnt::: a[a[1-a[1]]]

This is a expression statemnt::: a[a[1-a[1]]]

This is an assign statement::: Int = a[a[1-a[1]]]

siz = 2519 now = 1370

This is a void statement test_for ::: 1 parameters::: void test_for(int Int)

This is a factor statemnt::: 0

This is a term statemnt::: 0

This is a factor statemnt::: -2

This is a term statemnt::: -2

This is a expression statemnt::: 0+-2

This is an assign statement::: Int = 0+-2

This is a factor statemnt::: Int 

This is a term statemnt::: Int 

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: Int +1

This is an assign statement::: Int = Int +1

This is a factor statemnt::: Int 

This is a term statemnt::: Int 

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: Int +1

This is an assign statement::: Int = Int +1

This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a expression statemnt::: Int

This is a factor statemnt::: i 

This is a term statemnt::: i 

This is a expression statemnt::: i 

This is a factor statemnt::: 1000

This is a term statemnt::: 1000

This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a expression statemnt::: 1000-Int

This is a condition ::: i <= 1000-Int

This is a factor statemnt::: Int

This is a term statemnt::: Int

This is a expression statemnt::: Int

This is a factor statemnt::: i 

This is a term statemnt::: i 

This is a expression statemnt::: i 

This is a factor statemnt::: i

This is a term statemnt::: i

This is a expression statemnt::: i

This is a condition ::: i <= i

This is a loop statement::: for (i = Int; i <= i; i = i+1){
            ;
        }
    

This is a loop statement::: for (i = Int; i <= 1000-Int; i = i+1){
        for (i = Int; i <= i; i = i+1){
            ;
        }
    }


siz = 2519 now = 1641

This is a void statement test_call ::: 0 parameters::: void test_call()

This is a factor statemnt::: 2

This is a term statemnt::: 2

This is a expression statemnt::: 2

This is a factor statemnt::: 2

This is a term statemnt::: 2

This is a expression statemnt::: 2

This is a factor statemnt::: 3

This is a factor statemnt::: 5

This is a term statemnt::: 3*5

This is a expression statemnt::: 3*5

This is a parameter with ::: 2 parameters::: 2,3*5

This is function_call statement::: mymax(2,3*5)

This is a factor statemnt::: mymax(2,3*5)

This is a factor statemnt::: 2

This is a term statemnt::: 2

This is a expression statemnt::: 2

This is a factor statemnt::: 4

This is a term statemnt::: 4

This is a expression statemnt::: 4

This is a parameter with ::: 2 parameters::: 2, 4

This is function_call statement::: mymax(2, 4)

This is a factor statemnt::: mymax(2, 4)

This is a factor statemnt::: 100

This is a term statemnt::: 100

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: 100-1

This is a factor statemnt::: (100-1)

This is a term statemnt::: mymax(2,3*5)/mymax(2, 4)*(100-1)

This is a expression statemnt::: mymax(2,3*5)/mymax(2, 4)*(100-1)

This is a parameter with ::: 2 parameters::: 2, mymax(2,3*5)/mymax(2, 4)*(100-1)

This is function_call statement::: mymax(2, mymax(2,3*5)/mymax(2, 4)*(100-1))

siz = 2519 now = 1709

This is a factor statemnt::: mx

This is a term statemnt::: mx

This is a expression statemnt::: mx

This is a printf statement::: printf("mx = ", mx)

This is a factor statemnt::: 0

This is a term statemnt::: 0

This is a expression statemnt::: 0

This is a factor statemnt::: i 

This is a term statemnt::: i 

This is a expression statemnt::: i 

This is a factor statemnt::: m

This is a term statemnt::: m

This is a expression statemnt::: m

This is a condition ::: i <= m

This is a factor statemnt::: m 

This is a term statemnt::: m 

This is a factor statemnt::: i

This is a term statemnt::: i

This is a expression statemnt::: m - i

This is an assign statement::: j = m - i

This is a factor statemnt::: i 

This is a term statemnt::: i 

This is a expression statemnt::: i 

This is a factor statemnt::: 0

This is a term statemnt::: 0

This is a expression statemnt::: 0

This is a condition ::: i == 0

This is a factor statemnt::: j

This is a term statemnt::: j

This is a expression statemnt::: j

This is a factor statemnt::: n

This is a term statemnt::: n

This is a expression statemnt::: n

This is a parameter with ::: 2 parameters::: j,n

This is function_call statement::: work(j,n)

This is a factor statemnt::: work(j,n)

This is a term statemnt::: work(j,n)

This is a expression statemnt::: work(j,n)

This is a printf statement::: printf(work(j,n))

This is a ifstatement::: if (i == 0){
            printf(work(j,n));
        }
       

This is a factor statemnt::: n

This is a term statemnt::: n

This is a expression statemnt::: n

This is a printf statement::: printf("N    ",n)

This is a factor statemnt::: j

This is a term statemnt::: j

This is a expression statemnt::: j

This is a printf statement::: printf("M    ",j)

This is a factor statemnt::: j

This is a term statemnt::: j

This is a expression statemnt::: j

This is a factor statemnt::: n

This is a term statemnt::: n

This is a expression statemnt::: n

This is a parameter with ::: 2 parameters::: j, n

This is function_call statement::: C(j, n)

This is a factor statemnt::: C(j, n)

This is a term statemnt::: C(j, n)

This is a expression statemnt::: C(j, n)

This is a printf statement::: printf("C    ",C(j, n))

This is a printf statement::: printf("")

This is a loop statement::: for (i = 0;  i <= m; i = i +1) { 
        j = m - i;
        if (i == 0){
            printf(work(j,n));
        }
       printf("N    ",n);
       printf("M    ",j);
       printf("C    ",C(j, n)); 
       printf("");
    }
    

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: 1

This is a factor statemnt::: -2

This is a term statemnt::: -2

This is a expression statemnt::: --2

This is a parameter with ::: 2 parameters::: 1, --2

This is function_call statement::: mymax(1, --2)

This is a factor statemnt::: mymax(1, --2)

This is a term statemnt::: mymax(1, --2)

This is a expression statemnt::: mymax(1, --2)

This is an assign statement::: x = mymax(1, --2)

This is a factor statemnt::: x

This is a term statemnt::: x

This is a factor statemnt::: +8

This is a term statemnt::: +8

This is a expression statemnt::: x++8

This is a factor statemnt::: 9

This is a term statemnt::: 9

This is a expression statemnt::: 9

This is a parameter with ::: 2 parameters::: x++8, 9

This is function_call statement::: mymax(x++8, 9)

This is a factor statemnt::: mymax(x++8, 9)

This is a term statemnt::: mymax(x++8, 9)

This is a expression statemnt::: mymax(x++8, 9)

This is an assign statement::: x = mymax(x++8, 9)

This is a factor statemnt::: 4

This is a term statemnt::: 4

This is a expression statemnt::: 4

This is an assign statement::: y = 4

This is a factor statemnt::: 7

This is a term statemnt::: 7

This is a expression statemnt::: 7

This is an assign statement::: z = 7

This is a factor statemnt::: x 

This is a term statemnt::: x 

This is a expression statemnt::: x 

This is a factor statemnt::: y

This is a term statemnt::: y

This is a expression statemnt::: y

This is a condition ::: x > y

This is a factor statemnt::: x 

This is a term statemnt::: x 

This is a expression statemnt::: x 

This is a factor statemnt::: z

This is a term statemnt::: z

This is a expression statemnt::: z

This is a condition ::: x > z

This is a factor statemnt::: x

This is a term statemnt::: x

This is a expression statemnt::: x

This is an assign statement::: mx = x

This is a factor statemnt::: z

This is a term statemnt::: z

This is a expression statemnt::: z

This is an assign statement::: mx = z

This is a if_elsestatement::: if (x > z)
            mx = x;
        else
            mx = z;
    

This is a factor statemnt::: y 

This is a term statemnt::: y 

This is a expression statemnt::: y 

This is a factor statemnt::: z

This is a term statemnt::: z

This is a expression statemnt::: z

This is a condition ::: y > z

This is a factor statemnt::: y

This is a term statemnt::: y

This is a expression statemnt::: y

This is an assign statement::: mx = y

This is a factor statemnt::: z

This is a term statemnt::: z

This is a expression statemnt::: z

This is an assign statement::: mx = z

This is a if_elsestatement::: if (y > z)
    mx = y;
    else mx = z;
    
    

This is a if_elsestatement::: if (x > y){
        if (x > z)
            mx = x;
        else
            mx = z;
    }
    else if (y > z)
    mx = y;
    else mx = z;
    
    

This is a factor statemnt::: mx

This is a term statemnt::: mx

This is a expression statemnt::: mx

This is a printf statement::: printf("mx = ", mx)

This is function_call statement::: init()

This is a factor statemnt::: k

This is a term statemnt::: k

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: k+1

This is a factor statemnt::: i 

This is a term statemnt::: i 

This is a expression statemnt::: i 

This is a factor statemnt::: 0

This is a term statemnt::: 0

This is a expression statemnt::: 0

This is a condition ::: i >= 0

This is a factor statemnt::: i

This is a term statemnt::: i

This is a expression statemnt::: i

This is a factor statemnt::: k

This is a term statemnt::: k

This is a factor statemnt::: i

This is a term statemnt::: i

This is a expression statemnt::: k+i

This is an assign statement::: a[i] = k+i

This is a factor statemnt::: i

This is a term statemnt::: i

This is a expression statemnt::: i

This is a factor statemnt::: ch 

This is a term statemnt::: ch 

This is a factor statemnt::: i

This is a term statemnt::: i

This is a expression statemnt::: ch + i

This is an assign statement::: s[i] = ch + i

This is a loop statement::: for (i = k+1; i >= 0; i = i - 1){
        a[i] = k+i;
        s[i] = ch + i;
    }
    

This is a factor statemnt::: 0

This is a term statemnt::: 0

This is a expression statemnt::: 0

This is a factor statemnt::: i 

This is a term statemnt::: i 

This is a expression statemnt::: i 

This is a factor statemnt::: k

This is a term statemnt::: k

This is a expression statemnt::: k

This is a condition ::: i > k

This is a factor statemnt::: k 

This is a term statemnt::: k 

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: k + 1

This is an assign statement::: k = k + 1

This is a loop statement::: for (i = 0;  i > k; i = i-1) { 
        k = k + 1;
    }
    

This is a factor statemnt::: k

This is a term statemnt::: k

This is a expression statemnt::: k

This is a printf statement::: printf("k = ", k)

This is a factor statemnt::: k

This is a term statemnt::: k

This is a expression statemnt::: k

This is a factor statemnt::: s[k]

This is a term statemnt::: s[k]

This is a expression statemnt::: s[k]

This is a printf statement::: printf("ch = ",s[k])

This is function_call statement::: test_switch()

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: 1

This is a parameter with ::: 1 parameters::: 1

This is function_call statement::: test_for(1)

This is function_call statement::: test_call()

This is a factor statemnt::: 0

This is a term statemnt::: 0

This is a expression statemnt::: 0

This is a return statement::: return (0)

siz = 2519 now = 2519

