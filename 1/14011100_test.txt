const int N = 100, M = -10000;
const char ch = 'H';
const int K = 0;
const char ch1 = '+', ch2 = '-', ch3 = '*', ch4 = '、', ch5 = '_', ch6 = 'a', ch7 = '0', ch8 = '"', ch9 = '9';
int a[0],  i, j, n, m, k, x, y, z, mx;
char ch, s[10000];
int mymax(int x, int y){
	int ans;
	ans = x;
	if (y > x){
		ans = y;
	}
	else
	;
	return (ans);
}
int factorial(int n){
	int res;
	if (n < 0)
		return (-1);
	switch (n):
		case 0: res =  1;
		case 1: res = 1;
		default:  res = (n*factorial(n-1));
	return (ans);
}
int C(int m, int n){
	if (m <= n) ; //for test
	
	if (m > n)
		return -1;
	return (factorial(n)/factorial(m)/factorial(n-m));
}
void init{
	m = 5;
	scanf(k, ch);	
	return ;
}
char work(int n, int m){
	switch (C(m, n)): 
		case 0: return 'A';
		case 1: return 'B';
		case 2: return 'C';
		default: return '_'
}
void main() {
	x = 10;
	y = 4;
	z = 7;
	if (x > y){
		if (x > z)
			mx = x;
		else
			mx = z;
	}
	else if (y > z)
		mx = y;
	else mx = z;
	
	print(‘mx = ’, mx);
		
	n = mymax(1, 2);
	n = mymax(n+4, 5); //n=6
	init; //input m and ch
	for (i = 10; i >= 1; i = i - 1){
		a[i] = k+i;
		s[i] = ch + i;
	}
	for (i = 1;  i > 10; i = i+1) {
		k = k + 1;
	}
	printf("k = ", k); 
	printf("ch = ",s[k]); //s[6] = 'a'+6=g
	for (i = 0;  i <= n; i = i +1) {
		j = m - i;
		printf("C(",n,",",j,")=",work(j, n));
	}
	return ();
}