Please input a file:
cnt_tab 1 ::: hhh const int 10 1 0 &&& 0
QUAT!!! const_int hhh 10  ::: 0
cnt_tab 2 ::: iii const int 22 2 0 &&& 0
QUAT!!! const_int iii 22  ::: 0
cnt_tab 3 ::: jjj const int 333 3 0 &&& 0
QUAT!!! const_int jjj 333  ::: 0
This is a const_int statement::: 3elements::: const int hhh = 10, iii = 22, jjj = 333

cnt_tab 4 ::: ans variable int 0 4 0 &&& 0
QUAT!!! variable_int ans   ::: 0
cnt_tab 5 ::: a variable int[] 0 5 101 &&& 0
QUAT!!! variable_int[] a 101  ::: 0
This is a variable_int[] statement::: 2 variables::: int ans, a[101]

cnt_tab 6 ::: work void  0 0 0 &&& 1
QUAT!!! void_ work   ::: 1
cnt_tab 7 ::: n parameter int 0 1 0 &&& 1
QUAT!!! parameter_int n   ::: 1
This is a void statement work ::: 1 parameters::: void work(int n)

QUAT!!! BEGIN    ::: 1
QUAT!!! PRINT "!!!jjj="   ::: 1
This is a factor statemnt::: jjj

This is a term statemnt::: jjj

This is a expression statemnt::: jjj

QUAT!!! PRINT jjj   ::: 1
This is a printf statement::: printf("!!!jjj=", jjj)

This is a factor statemnt::: n

This is a term statemnt::: n

This is a expression statemnt::: n

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: 1

QUAT!!! == n 1  ::: 1
This is a condition ::: n==1

QUAT!!! BZ LABEL_1   ::: 1
This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: 1

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: 1

QUAT!!! = a[1] 1  ::: 1
This is an assign statement::: a[1] = 1

This is a factor statemnt::: 0

This is a term statemnt::: 0

This is a expression statemnt::: 0

This is a factor statemnt::: 0

This is a term statemnt::: 0

This is a expression statemnt::: 0

QUAT!!! = a[0] 0  ::: 1
This is an assign statement::: a[0] = 0

QUAT!!! ret    ::: 1
This is a return statement::: return 

This is a ifstatement::: if (n==1)
	{
		a[1] = 1;
		a[0] = 0;
		return ;
	}
	

This is a factor statemnt::: n

This is a term statemnt::: n

This is a factor statemnt::: 1

This is a term statemnt::: 1

QUAT!!! - #1 n 1 ::: 1
This is a expression statemnt::: n-1

QUAT!!! PUSH #1 1  ::: 1
This is a parameter with ::: 1 parameters::: n-1

This is function_call statement::: work(n-1)

QUAT!!! call work   ::: 1
This is a factor statemnt::: n

This is a term statemnt::: n

This is a expression statemnt::: n

This is a factor statemnt::: n

This is a term statemnt::: n

This is a factor statemnt::: 1

This is a term statemnt::: 1

QUAT!!! - #2 n 1 ::: 1
This is a expression statemnt::: n-1

QUAT!!! = #3 a[#2]  ::: 1
This is a factor statemnt::: a[n-1]

This is a term statemnt::: a[n-1]

This is a factor statemnt::: n

This is a term statemnt::: n

This is a factor statemnt::: 2

This is a term statemnt::: 2

QUAT!!! - #4 n 2 ::: 1
This is a expression statemnt::: n-2

QUAT!!! = #5 a[#4]  ::: 1
This is a factor statemnt::: a[n-2]

This is a term statemnt::: a[n-2]

QUAT!!! + #6 #3 #5 ::: 1
This is a expression statemnt::: a[n-1]+a[n-2]

QUAT!!! = a[n] #6  ::: 1
This is an assign statement::: a[n] = a[n-1]+a[n-2]

siz = 592 now = 195

QUAT!!! ret    ::: 1
cnt_tab 8 ::: main void  0 0 0 &&& 2
QUAT!!! void_ main   ::: 2
cnt_tab 9 ::: jjj const int 666 1 0 &&& 2
QUAT!!! const_int jjj 666  ::: 2
This is a const_int statement::: 1elements::: const int jjj = 666

cnt_tab 10 ::: n variable int 0 2 0 &&& 2
QUAT!!! variable_int n   ::: 2
This is a variable_int statement::: 1 variables::: int n

cnt_tab 11 ::: i variable int 0 3 0 &&& 2
QUAT!!! variable_int i   ::: 2
This is a variable_int statement::: 1 variables::: 
	int i

QUAT!!! BEGIN    ::: 2
QUAT!!! READ n   ::: 2
This is a scanf statement::: 1 variables::: scanf(n)

This is a factor statemnt::: n

This is a term statemnt::: n

This is a expression statemnt::: n

QUAT!!! PUSH n 1  ::: 2
This is a parameter with ::: 1 parameters::: n

This is function_call statement::: work(n)

QUAT!!! call work   ::: 2
QUAT!!! PRINT "ans="   ::: 2
This is a factor statemnt::: n

This is a term statemnt::: n

This is a expression statemnt::: n

QUAT!!! = #7 a[n]  ::: 2
This is a factor statemnt::: a[n]

This is a term statemnt::: a[n]

This is a expression statemnt::: a[n]

QUAT!!! PRINT #7   ::: 2
This is a printf statement::: printf("ans=", a[n])

This is a factor statemnt::: 2

This is a factor statemnt::: 3

QUAT!!! * #8 2 3 ::: 2
This is a factor statemnt::: 4

QUAT!!! * #9 #8 4 ::: 2
This is a term statemnt::: 2*3*4

This is a factor statemnt::: 5000

This is a term statemnt::: 5000

This is a factor statemnt::: 5000

This is a term statemnt::: 5000

QUAT!!! + #10 5000 5000 ::: 2
This is a expression statemnt::: 5000+5000

This is a factor statemnt::: (5000+5000)

This is a term statemnt::: (5000+5000)

QUAT!!! + #11 #9 #10 ::: 2
This is a expression statemnt::: 2*3*4+(5000+5000)

QUAT!!! = ans #11  ::: 2
This is an assign statement::: ans = 2*3*4+(5000+5000)

QUAT!!! PRINT "ans="   ::: 2
This is a factor statemnt::: ans

This is a term statemnt::: ans

This is a expression statemnt::: ans

QUAT!!! PRINT ans   ::: 2
This is a printf statement::: printf("ans=", ans)

This is a factor statemnt::: 4

This is a factor statemnt::: 5

QUAT!!! * #12 4 5 ::: 2
This is a term statemnt::: 4*5

This is a factor statemnt::: 2

This is a term statemnt::: 2

QUAT!!! - #13 #12 2 ::: 2
This is a expression statemnt::: 4*5-2

This is a factor statemnt::: 10000 

This is a term statemnt::: 10000 

This is a factor statemnt::: n

This is a term statemnt::: n

This is a expression statemnt::: n

QUAT!!! = #14 a[n]  ::: 2
This is a factor statemnt::: a[n]

This is a term statemnt::: a[n]

QUAT!!! + #15 10000 #14 ::: 2
This is a expression statemnt::: 10000 + a[n]

QUAT!!! = a[#13] #15  ::: 2
This is an assign statement::: a[4*5-2] = 10000 + a[n]

QUAT!!! PRINT "ans="   ::: 2
This is a factor statemnt::: 18

This is a term statemnt::: 18

This is a expression statemnt::: 18

QUAT!!! = #16 a[18]  ::: 2
This is a factor statemnt::: a[18]

This is a term statemnt::: a[18]

This is a expression statemnt::: a[18]

QUAT!!! PRINT #16   ::: 2
This is a printf statement::: printf("ans=", a[18])

This is a factor statemnt::: 18

This is a term statemnt::: 18

This is a expression statemnt::: 18

This is a factor statemnt::: 888

This is a term statemnt::: 888

This is a expression statemnt::: 888

QUAT!!! = a[18] 888  ::: 2
This is an assign statement::: a[18] = 888

QUAT!!! PRINT "ans="   ::: 2
This is a factor statemnt::: 18

This is a term statemnt::: 18

This is a expression statemnt::: 18

QUAT!!! = #17 a[18]  ::: 2
This is a factor statemnt::: a[18]

This is a factor statemnt::: iii

QUAT!!! * #18 #17 iii ::: 2
This is a term statemnt::: a[18]*iii

This is a expression statemnt::: a[18]*iii

QUAT!!! PRINT #18   ::: 2
This is a printf statement::: printf("ans=", a[18]*iii)

This is a factor statemnt::: 10

This is a term statemnt::: 10

This is a expression statemnt::: 10

QUAT!!! = i 10  ::: 2
This is a factor statemnt::: i 

This is a term statemnt::: i 

This is a expression statemnt::: i 

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: 1

This is a condition ::: i >= 1

QUAT!!! PRINT "i="   ::: 2
This is a factor statemnt::: i

This is a term statemnt::: i

This is a expression statemnt::: i

QUAT!!! PRINT i   ::: 2
This is a printf statement::: printf("i=", i)

This is a factor statemnt::: i 

This is a term statemnt::: i 

This is a expression statemnt::: i 

This is a factor statemnt::: 5

This is a term statemnt::: 5

This is a expression statemnt::: 5

QUAT!!! <= i 5  ::: 2
This is a condition ::: i <= 5

QUAT!!! BZ LABEL_4   ::: 2
QUAT!!! PRINT "i<=5"   ::: 2
This is a printf statement::: printf("i<=5")

This is a ifstatement::: if (i <= 5){
			printf("i<=5");
		}
	

QUAT!!! BZ LABEL_6   ::: 2
QUAT!!! GOTO LABEL_3   ::: 2
This is a loop statement::: for (i = 10; i >= 1; i = i-1){
		printf("i=", i);
		if (i <= 5){
			printf("i<=5");
		}
	}


This is a factor statemnt::: n 

This is a term statemnt::: n 

This is a expression statemnt::: n 

This is a factor statemnt::: 1

This is a term statemnt::: 1

This is a expression statemnt::: 1

QUAT!!! <= n 1  ::: 2
This is a condition ::: n <= 1

QUAT!!! BZ LABEL_7   ::: 2
QUAT!!! PRINT "n<=1"   ::: 2
This is a printf statement::: printf("n<=1")

QUAT!!! GOTO LABEL_8   ::: 2
This is a if_elsestatement::: if (n <= 1){
	printf("n<=1");
}
else
	;


QUAT!!! PRINT "!!!jjj="   ::: 2
This is a factor statemnt::: jjj

This is a term statemnt::: jjj

This is a expression statemnt::: jjj

QUAT!!! PRINT jjj   ::: 2
This is a printf statement::: printf("!!!jjj=", jjj)

QUAT!!! ret    ::: 2
This is a return statement::: return 

siz = 592 now = 592

------------------------------
------------------------------
------------------------------
const int hhh = 10
const int iii = 22
const int jjj = 333
var int ans
var int a[101]
void work
para int n
BEGIN
PRINT "!!!jjj="
PRINT jjj
n == 1
BZ LABEL_1
a[1] = 1
a[0] = 0
ret 
LABEL_1 #1 = n - 1
PUSH #1
call work
#2 = n - 1
#3 = a[#2]
#4 = n - 2
#5 = a[#4]
#6 = #3 + #5
a[n] = #6
ret 
void main
const int jjj = 666
var int n
var int i
BEGIN
READ n
PUSH n
call work
PRINT "ans="
#7 = a[n]
PRINT #7
#8 = 2 * 3
#9 = #8 * 4
#10 = 5000 + 5000
#11 = #9 + #10
ans = #11
PRINT "ans="
PRINT ans
#12 = 4 * 5
#13 = #12 - 2
#14 = a[n]
#15 = 10000 + #14
a[#13] = #15
PRINT "ans="
#16 = a[18]
PRINT #16
a[18] = 888
PRINT "ans="
#17 = a[18]
#18 = #17 * iii
PRINT #18
i = 10
LABEL_3 PRINT "i="
PRINT i
i <= 5
BZ LABEL_4
PRINT "i<=5"
LABEL_4 i = i - 1
i >= 1
BZ LABEL_6
GOTO LABEL_3
LABEL_6 n <= 1
BZ LABEL_7
PRINT "n<=1"
GOTO LABEL_8
LABEL_7 LABEL_8 PRINT "!!!jjj="
PRINT jjj
ret 
------------------------------
------------------------------
------------------------------
Program 1 :  6
Program 2 :  8
AddByMe Program 3 :  12
------------------------------
------------------------------
------------------------------
Symbol 1 :  hhh const int 10 1 0 0
Symbol 2 :  iii const int 22 2 0 0
Symbol 3 :  jjj const int 333 3 0 0
Symbol 4 :  ans variable int 0 4 0 0
Symbol 5 :  a variable int[] 0 5 101 0
Symbol 6 :  work void  0 0 1 1
Symbol 7 :  n parameter int 0 1 0 1
Symbol 8 :  main void  0 0 0 2
Symbol 9 :  jjj const int 666 1 0 2
Symbol 10 :  n variable int 0 2 0 2
Symbol 11 :  i variable int 0 3 0 2
------------------------------
------------------------------
------------------------------
#1 ::: 1 5
SAME!!!
#2 ::: 1 6
#3 ::: 1 7
#4 ::: 1 8
#5 ::: 1 9
#6 ::: 1 10
#7 ::: 2 7
SAME!!!
#8 ::: 2 8
#9 ::: 2 9
#10 ::: 2 10
#11 ::: 2 11
#12 ::: 2 12
#13 ::: 2 13
#14 ::: 2 14
#15 ::: 2 15
#16 ::: 2 16
SAME!!!
#17 ::: 2 17
#18 ::: 2 18
SAME!!!
5
------------------------------
------------------------------
------------------------------
.data

str1:	.asciiz "!!!jjj="

str2:	.asciiz "ans="

str4:	.asciiz "i<=5"

str3:	.asciiz "i="

str5:	.asciiz "n<=1"

#	const int hhh = 10
li	$t1,10
sw	$t1,0($sp)
addi	$sp,$sp,-4

#	const int iii = 22
li	$t1,22
sw	$t1,0($sp)
addi	$sp,$sp,-4

#	const int jjj = 333
li	$t1,333
sw	$t1,0($sp)
addi	$sp,$sp,-4

sw	$0,0($sp)
addi	$sp,$sp,-4

li	$t0,0
li	$t1,101
LABEL_9:
sw	$0,0($sp)
addi	$sp,$sp,-4

addi	$t0,$t0,1
bne	$t0,$t1,LABEL_9

.text

move	$gp, $sp
#	const int hhh = 10
li	$t1,10
sw	$t1,0($sp)
addi	$sp,$sp,-4

#	const int iii = 22
li	$t1,22
sw	$t1,0($sp)
addi	$sp,$sp,-4

#	const int jjj = 333
li	$t1,333
sw	$t1,0($sp)
addi	$sp,$sp,-4

sw	$0,0($sp)
addi	$sp,$sp,-4

li	$t0,0
li	$t1,101
LABEL_10:
sw	$0,0($sp)
addi	$sp,$sp,-4

addi	$t0,$t0,1
bne	$t0,$t1,LABEL_10

j	main

work:
move	$s1,$sp
move	$s0,$fp
addi	$fp,$sp,4
#END Const&Variable define
sw	$s1,0($sp)
addi	$sp,$sp,-4

sw	$ra,0($sp)
addi	$sp,$sp,-4

sw	$s0,0($sp)
addi	$sp,$sp,-4

addi	$sp,$sp,-24
#	PRINT "!!!jjj="
la	$a0,str1
li	$v0,4
syscall

#	PRINT jjj
#~~~jjj
move	$t1,$gp
subi	$t1,$t1,8
lw	$t1,0($t1)
move	$a0,$t1
li	$v0,1
syscall

#	n == 1
#~~~n
move	$t1,$fp
subi	$t1,$t1,0
lw	$t1,0($t1)
#~~~1
li	$t2,1
seq	$t0,$t1,$t2
#	BZ LABEL_1
bne	$t0,1,LABEL_1
#a[1] = 1
#~~~a[1]
#~~~a
move	$t1,$gp
subi	$t1,$t1,16
#~~~1
li	$t2,1
sll	$t2,$t2,2
sub	$t1,$t1,$t2
#~~~1
li	$t2,1

sw	$t2,0($t1)
#a[0] = 0
#~~~a[0]
#~~~a
move	$t1,$gp
subi	$t1,$t1,16
#~~~0
li	$t2,0
sll	$t2,$t2,2
sub	$t1,$t1,$t2
#~~~0
li	$t2,0

sw	$t2,0($t1)
#	 ret 
lw	$sp,-4($fp)
addi	$sp,$sp,0
lw	$ra,-8($fp)
lw	$fp,-12($fp)
jr	$ra
LABEL_1:
##1 = n - 1
#~~~1
li	$t2,1
#~~~n
move	$t1,$fp
subi	$t1,$t1,0
lw	$t1,0($t1)
sub	$t1,$t1,$t2
#~~~#1
move	$t3,$fp
subi	$t3,$t3,16

sw	$t1,0($t3)
#	PUSH #1
#~~~#1
move	$t1,$fp
subi	$t1,$t1,16
lw	$t1,0($t1)
sw	$t1,0($sp)
addi	$sp,$sp,-4

#	call work
jal	work
##2 = n - 1
#~~~1
li	$t2,1
#~~~n
move	$t1,$fp
subi	$t1,$t1,0
lw	$t1,0($t1)
sub	$t1,$t1,$t2
#~~~#2
move	$t3,$fp
subi	$t3,$t3,20

sw	$t1,0($t3)
##3 = a[#2]
#~~~a[#2]
#~~~a
move	$t1,$gp
subi	$t1,$t1,16
#~~~#2
move	$t2,$fp
subi	$t2,$t2,20
lw	$t2,0($t2)
sll	$t2,$t2,2
sub	$t1,$t1,$t2
lw	$t2,0($t1)
#~~~#3
move	$t1,$fp
subi	$t1,$t1,24

sw	$t2,0($t1)
##4 = n - 2
#~~~2
li	$t2,2
#~~~n
move	$t1,$fp
subi	$t1,$t1,0
lw	$t1,0($t1)
sub	$t1,$t1,$t2
#~~~#4
move	$t3,$fp
subi	$t3,$t3,28

sw	$t1,0($t3)
##5 = a[#4]
#~~~a[#4]
#~~~a
move	$t1,$gp
subi	$t1,$t1,16
#~~~#4
move	$t2,$fp
subi	$t2,$t2,28
lw	$t2,0($t2)
sll	$t2,$t2,2
sub	$t1,$t1,$t2
lw	$t2,0($t1)
#~~~#5
move	$t1,$fp
subi	$t1,$t1,32

sw	$t2,0($t1)
##6 = #3 + #5
#~~~#5
move	$t2,$fp
subi	$t2,$t2,32
lw	$t2,0($t2)
#~~~#3
move	$t1,$fp
subi	$t1,$t1,24
lw	$t1,0($t1)
add	$t1,$t1,$t2
#~~~#6
move	$t3,$fp
subi	$t3,$t3,36

sw	$t1,0($t3)
#a[n] = #6
#~~~a[n]
#~~~a
move	$t1,$gp
subi	$t1,$t1,16
#~~~n
move	$t2,$fp
subi	$t2,$t2,0
lw	$t2,0($t2)
sll	$t2,$t2,2
sub	$t1,$t1,$t2
#~~~#6
move	$t2,$fp
subi	$t2,$t2,36
lw	$t2,0($t2)

sw	$t2,0($t1)
#	 ret 
lw	$sp,-4($fp)
addi	$sp,$sp,0
lw	$ra,-8($fp)
lw	$fp,-12($fp)
jr	$ra
main:
move	$s1,$sp
move	$s0,$fp
addi	$fp,$sp,0
#	const int jjj = 666
li	$t1,666
sw	$t1,0($sp)
addi	$sp,$sp,-4

sw	$0,0($sp)
addi	$sp,$sp,-4

sw	$0,0($sp)
addi	$sp,$sp,-4

#END Const&Variable define
sw	$s1,0($sp)
addi	$sp,$sp,-4

sw	$ra,0($sp)
addi	$sp,$sp,-4

sw	$s0,0($sp)
addi	$sp,$sp,-4

addi	$sp,$sp,-48
#	READ n
#~~~n
move	$t1,$fp
subi	$t1,$t1,4
li	$v0,5
syscall

sw	$v0,0($t1)

#	PUSH n
#~~~n
move	$t1,$fp
subi	$t1,$t1,4
lw	$t1,0($t1)
sw	$t1,0($sp)
addi	$sp,$sp,-4

#	call work
jal	work
#	PRINT "ans="
la	$a0,str2
li	$v0,4
syscall

##7 = a[n]
#~~~a[n]
#~~~a
move	$t1,$gp
subi	$t1,$t1,16
#~~~n
move	$t2,$fp
subi	$t2,$t2,4
lw	$t2,0($t2)
sll	$t2,$t2,2
sub	$t1,$t1,$t2
lw	$t2,0($t1)
#~~~#7
move	$t1,$fp
subi	$t1,$t1,24

sw	$t2,0($t1)
#	PRINT #7
#~~~#7
move	$t1,$fp
subi	$t1,$t1,24
lw	$t1,0($t1)
move	$a0,$t1
li	$v0,1
syscall

##8 = 2 * 3
#~~~3
li	$t2,3
#~~~2
li	$t1,2
mul	$t1,$t1,$t2
#~~~#8
move	$t3,$fp
subi	$t3,$t3,28

sw	$t1,0($t3)
##9 = #8 * 4
#~~~4
li	$t2,4
#~~~#8
move	$t1,$fp
subi	$t1,$t1,28
lw	$t1,0($t1)
mul	$t1,$t1,$t2
#~~~#9
move	$t3,$fp
subi	$t3,$t3,32

sw	$t1,0($t3)
##10 = 5000 + 5000
#~~~5000
li	$t2,5000
#~~~5000
li	$t1,5000
add	$t1,$t1,$t2
#~~~#10
move	$t3,$fp
subi	$t3,$t3,36

sw	$t1,0($t3)
##11 = #9 + #10
#~~~#10
move	$t2,$fp
subi	$t2,$t2,36
lw	$t2,0($t2)
#~~~#9
move	$t1,$fp
subi	$t1,$t1,32
lw	$t1,0($t1)
add	$t1,$t1,$t2
#~~~#11
move	$t3,$fp
subi	$t3,$t3,40

sw	$t1,0($t3)
#ans = #11
#~~~#11
move	$t2,$fp
subi	$t2,$t2,40
lw	$t2,0($t2)
#~~~ans
move	$t1,$gp
subi	$t1,$t1,12

sw	$t2,0($t1)
#	PRINT "ans="
la	$a0,str2
li	$v0,4
syscall

#	PRINT ans
#~~~ans
move	$t1,$gp
subi	$t1,$t1,12
lw	$t1,0($t1)
move	$a0,$t1
li	$v0,1
syscall

##12 = 4 * 5
#~~~5
li	$t2,5
#~~~4
li	$t1,4
mul	$t1,$t1,$t2
#~~~#12
move	$t3,$fp
subi	$t3,$t3,44

sw	$t1,0($t3)
##13 = #12 - 2
#~~~2
li	$t2,2
#~~~#12
move	$t1,$fp
subi	$t1,$t1,44
lw	$t1,0($t1)
sub	$t1,$t1,$t2
#~~~#13
move	$t3,$fp
subi	$t3,$t3,48

sw	$t1,0($t3)
##14 = a[n]
#~~~a[n]
#~~~a
move	$t1,$gp
subi	$t1,$t1,16
#~~~n
move	$t2,$fp
subi	$t2,$t2,4
lw	$t2,0($t2)
sll	$t2,$t2,2
sub	$t1,$t1,$t2
lw	$t2,0($t1)
#~~~#14
move	$t1,$fp
subi	$t1,$t1,52

sw	$t2,0($t1)
##15 = 10000 + #14
#~~~#14
move	$t2,$fp
subi	$t2,$t2,52
lw	$t2,0($t2)
#~~~10000
li	$t1,10000
add	$t1,$t1,$t2
#~~~#15
move	$t3,$fp
subi	$t3,$t3,56

sw	$t1,0($t3)
#a[#13] = #15
#~~~a[#13]
#~~~a
move	$t1,$gp
subi	$t1,$t1,16
#~~~#13
move	$t2,$fp
subi	$t2,$t2,48
lw	$t2,0($t2)
sll	$t2,$t2,2
sub	$t1,$t1,$t2
#~~~#15
move	$t2,$fp
subi	$t2,$t2,56
lw	$t2,0($t2)

sw	$t2,0($t1)
#	PRINT "ans="
la	$a0,str2
li	$v0,4
syscall

##16 = a[18]
#~~~a[18]
#~~~a
move	$t1,$gp
subi	$t1,$t1,16
#~~~18
li	$t2,18
sll	$t2,$t2,2
sub	$t1,$t1,$t2
lw	$t2,0($t1)
#~~~#16
move	$t1,$fp
subi	$t1,$t1,60

sw	$t2,0($t1)
#	PRINT #16
#~~~#16
move	$t1,$fp
subi	$t1,$t1,60
lw	$t1,0($t1)
move	$a0,$t1
li	$v0,1
syscall

#a[18] = 888
#~~~a[18]
#~~~a
move	$t1,$gp
subi	$t1,$t1,16
#~~~18
li	$t2,18
sll	$t2,$t2,2
sub	$t1,$t1,$t2
#~~~888
li	$t2,888

sw	$t2,0($t1)
#	PRINT "ans="
la	$a0,str2
li	$v0,4
syscall

##17 = a[18]
#~~~a[18]
#~~~a
move	$t1,$gp
subi	$t1,$t1,16
#~~~18
li	$t2,18
sll	$t2,$t2,2
sub	$t1,$t1,$t2
lw	$t2,0($t1)
#~~~#17
move	$t1,$fp
subi	$t1,$t1,64

sw	$t2,0($t1)
##18 = #17 * iii
#~~~iii
move	$t2,$gp
subi	$t2,$t2,4
lw	$t2,0($t2)
#~~~#17
move	$t1,$fp
subi	$t1,$t1,64
lw	$t1,0($t1)
mul	$t1,$t1,$t2
#~~~#18
move	$t3,$fp
subi	$t3,$t3,68

sw	$t1,0($t3)
#	PRINT #18
#~~~#18
move	$t1,$fp
subi	$t1,$t1,68
lw	$t1,0($t1)
move	$a0,$t1
li	$v0,1
syscall

#i = 10
#~~~10
li	$t2,10
#~~~i
move	$t1,$fp
subi	$t1,$t1,8

sw	$t2,0($t1)
LABEL_3:
#	PRINT "i="
la	$a0,str3
li	$v0,4
syscall

#	PRINT i
#~~~i
move	$t1,$fp
subi	$t1,$t1,8
lw	$t1,0($t1)
move	$a0,$t1
li	$v0,1
syscall

#	i <= 5
#~~~i
move	$t1,$fp
subi	$t1,$t1,8
lw	$t1,0($t1)
#~~~5
li	$t2,5
sle	$t0,$t1,$t2
#	BZ LABEL_4
bne	$t0,1,LABEL_4
#	PRINT "i<=5"
la	$a0,str4
li	$v0,4
syscall

LABEL_4:
#i = i - 1
#~~~1
li	$t2,1
#~~~i
move	$t1,$fp
subi	$t1,$t1,8
lw	$t1,0($t1)
sub	$t1,$t1,$t2
#~~~i
move	$t3,$fp
subi	$t3,$t3,8

sw	$t1,0($t3)
#	i >= 1
#~~~i
move	$t1,$fp
subi	$t1,$t1,8
lw	$t1,0($t1)
#~~~1
li	$t2,1
sge	$t0,$t1,$t2
#	BZ LABEL_6
bne	$t0,1,LABEL_6
#	GOTO LABEL_3
jal	LABEL_3
LABEL_6:
#	n <= 1
#~~~n
move	$t1,$fp
subi	$t1,$t1,4
lw	$t1,0($t1)
#~~~1
li	$t2,1
sle	$t0,$t1,$t2
#	BZ LABEL_7
bne	$t0,1,LABEL_7
#	PRINT "n<=1"
la	$a0,str5
li	$v0,4
syscall

#	GOTO LABEL_8
jal	LABEL_8
LABEL_7:
LABEL_8:
#	PRINT "!!!jjj="
la	$a0,str1
li	$v0,4
syscall

#	PRINT jjj
#~~~jjj
move	$t1,$fp
subi	$t1,$t1,0
lw	$t1,0($t1)
move	$a0,$t1
li	$v0,1
syscall

#	 ret 
li	$v0,10
syscall
