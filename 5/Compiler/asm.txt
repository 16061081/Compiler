.data

str5:	.asciiz " input a num (num < 11) "

str1:	.asciiz "INPUT YOUR OPCODE,0 : function1_x , 1: function2"

str6:	.asciiz "error op!"

str4:	.asciiz "input a char  "

str2:	.asciiz "input a num"

str3:	.asciiz "return code is "

.text

move	$gp, $sp
#	const int my_const1 = 10
li	$t1,10
sw	$t1,0($sp)
addi	$sp,$sp,-4

#	const int my_const2 = 15
li	$t1,15
sw	$t1,0($sp)
addi	$sp,$sp,-4

#	const char my_const3 = 97
li	$t1,97
sw	$t1,0($sp)
addi	$sp,$sp,-4

#	const char my_const4 = 57
li	$t1,57
sw	$t1,0($sp)
addi	$sp,$sp,-4

#	const char my_const5 = 95
li	$t1,95
sw	$t1,0($sp)
addi	$sp,$sp,-4

subi	$sp,$sp,148
j	main

my_function1:
move	$s1,$sp
move	$s0,$fp
addi	$fp,$sp,4
subi	$sp,$sp,4
#END Const&Variable define
sw	$s1,0($sp)
addi	$sp,$sp,-4

sw	$ra,0($sp)
addi	$sp,$sp,-4

sw	$s0,0($sp)
addi	$sp,$sp,-4

addi	$sp,$sp,-8
#a = 0
#~~~0
li	$t2,0
#~~~a
subi	$t1,$fp,4

sw	$t2,0($t1)
#	function1_x < 10
#~~~function1_x
lw	$t1,-0($fp)
#~~~10
li	$t2,10
slt	$t0,$t1,$t2
#	BZ LABEL_1
bne	$t0,1,LABEL_1
##1 = function1_x * 2
#~~~2
li	$t2,2
#~~~function1_x
lw	$t1,-0($fp)
mul	$t1,$t1,$t2
#~~~#1
subi	$t3,$fp,20

sw	$t1,0($t3)
#function1_x = #1
#~~~#1
lw	$t2,-20($fp)
#~~~function1_x
subi	$t1,$fp,0

sw	$t2,0($t1)
#	PUSH function1_x
#~~~function1_x
lw	$t1,-0($fp)
sw	$t1,0($sp)
addi	$sp,$sp,-4

#	call my_function1
jal	my_function1
##2 = RET_int
#~~~RET_int
move	$t2,$v1
#~~~#2
subi	$t1,$fp,24

sw	$t2,0($t1)
#a = #2
#~~~#2
lw	$t2,-24($fp)
#~~~a
subi	$t1,$fp,4

sw	$t2,0($t1)
#	GOTO LABEL_2
jal	LABEL_2
LABEL_1:
#	function1_x ret 
#~~~function1_x
lw	$t1,-0($fp)
move	$v1,$t1
lw	$sp,-8($fp)
addi	$sp,$sp,0
lw	$ra,-12($fp)
lw	$fp,-16($fp)
jr	$ra
LABEL_2:
#	a ret 
#~~~a
lw	$t1,-4($fp)
move	$v1,$t1
lw	$sp,-8($fp)
addi	$sp,$sp,0
lw	$ra,-12($fp)
lw	$fp,-16($fp)
jr	$ra
my_function2:
move	$s1,$sp
move	$s0,$fp
addi	$fp,$sp,8
subi	$sp,$sp,4
#END Const&Variable define
sw	$s1,0($sp)
addi	$sp,$sp,-4

sw	$ra,0($sp)
addi	$sp,$sp,-4

sw	$s0,0($sp)
addi	$sp,$sp,-4

addi	$sp,$sp,-0
#my_var4[0] = 'H'
#~~~my_var4[0]
#~~~my_var4
subi	$t1,$gp,92
#~~~0
li	$t2,0
sll	$t2,$t2,2
sub	$t1,$t1,$t2
#~~~'H'
li	$t2,72

sw	$t2,0($t1)
#my_var4[1] = 'E'
#~~~my_var4[1]
#~~~my_var4
subi	$t1,$gp,92
#~~~1
li	$t2,1
sll	$t2,$t2,2
sub	$t1,$t1,$t2
#~~~'E'
li	$t2,69

sw	$t2,0($t1)
#my_var4[2] = 'L'
#~~~my_var4[2]
#~~~my_var4
subi	$t1,$gp,92
#~~~2
li	$t2,2
sll	$t2,$t2,2
sub	$t1,$t1,$t2
#~~~'L'
li	$t2,76

sw	$t2,0($t1)
#my_var4[3] = 'L'
#~~~my_var4[3]
#~~~my_var4
subi	$t1,$gp,92
#~~~3
li	$t2,3
sll	$t2,$t2,2
sub	$t1,$t1,$t2
#~~~'L'
li	$t2,76

sw	$t2,0($t1)
#my_var4[4] = 'O'
#~~~my_var4[4]
#~~~my_var4
subi	$t1,$gp,92
#~~~4
li	$t2,4
sll	$t2,$t2,2
sub	$t1,$t1,$t2
#~~~'O'
li	$t2,79

sw	$t2,0($t1)
#my_var4[5] = 'W'
#~~~my_var4[5]
#~~~my_var4
subi	$t1,$gp,92
#~~~5
li	$t2,5
sll	$t2,$t2,2
sub	$t1,$t1,$t2
#~~~'W'
li	$t2,87

sw	$t2,0($t1)
#my_var4[6] = 'W'
#~~~my_var4[6]
#~~~my_var4
subi	$t1,$gp,92
#~~~6
li	$t2,6
sll	$t2,$t2,2
sub	$t1,$t1,$t2
#~~~'W'
li	$t2,87

sw	$t2,0($t1)
#my_var4[7] = 'O'
#~~~my_var4[7]
#~~~my_var4
subi	$t1,$gp,92
#~~~7
li	$t2,7
sll	$t2,$t2,2
sub	$t1,$t1,$t2
#~~~'O'
li	$t2,79

sw	$t2,0($t1)
#my_var4[8] = 'R'
#~~~my_var4[8]
#~~~my_var4
subi	$t1,$gp,92
#~~~8
li	$t2,8
sll	$t2,$t2,2
sub	$t1,$t1,$t2
#~~~'R'
li	$t2,82

sw	$t2,0($t1)
#my_var4[9] = 'L'
#~~~my_var4[9]
#~~~my_var4
subi	$t1,$gp,92
#~~~9
li	$t2,9
sll	$t2,$t2,2
sub	$t1,$t1,$t2
#~~~'L'
li	$t2,76

sw	$t2,0($t1)
#my_var4[10] = 'D'
#~~~my_var4[10]
#~~~my_var4
subi	$t1,$gp,92
#~~~10
li	$t2,10
sll	$t2,$t2,2
sub	$t1,$t1,$t2
#~~~'D'
li	$t2,68

sw	$t2,0($t1)
#i = 0
#~~~0
li	$t2,0
#~~~i
subi	$t1,$fp,8

sw	$t2,0($t1)
LABEL_3:
#	i == function2_y
#~~~i
lw	$t1,-8($fp)
#~~~function2_y
lw	$t2,-4($fp)
seq	$t0,$t1,$t2
#	BZ LABEL_4
bne	$t0,1,LABEL_4
#my_var4[i] = function2_x
#~~~my_var4[i]
#~~~my_var4
subi	$t1,$gp,92
#~~~i
lw	$t2,-8($fp)
sll	$t2,$t2,2
sub	$t1,$t1,$t2
#~~~function2_x
lw	$t2,-0($fp)

sw	$t2,0($t1)
LABEL_4:
#i = i + 1
#~~~1
li	$t2,1
#~~~i
lw	$t1,-8($fp)
add	$t1,$t1,$t2
#~~~i
subi	$t3,$fp,8

sw	$t1,0($t3)
#	i < 11
#~~~i
lw	$t1,-8($fp)
#~~~11
li	$t2,11
slt	$t0,$t1,$t2
#	BZ LABEL_6
bne	$t0,1,LABEL_6
#	GOTO LABEL_3
jal	LABEL_3
LABEL_6:
#	 ret 
lw	$sp,-12($fp)
addi	$sp,$sp,0
lw	$ra,-16($fp)
lw	$fp,-20($fp)
jr	$ra
main:
move	$s1,$sp
move	$s0,$fp
addi	$fp,$sp,0
subi	$sp,$sp,24
#END Const&Variable define
sw	$s1,0($sp)
addi	$sp,$sp,-4

sw	$ra,0($sp)
addi	$sp,$sp,-4

sw	$s0,0($sp)
addi	$sp,$sp,-4

addi	$sp,$sp,-8
#	PRINT "INPUT YOUR OPCODE,0 : function1_x , 1: function2"
la	$a0,str1
li	$v0,4
syscall

#	READ op
#~~~op
subi	$t1,$fp,0
li	$v0,5
syscall

sw	$v0,0($t1)

#	SWITCH op
#	op == 0
#~~~op
lw	$t1,-0($fp)
#~~~0
li	$t2,0
seq	$t0,$t1,$t2
#	BZ LABEL_8
bne	$t0,1,LABEL_8
#	PRINT "input a num"
la	$a0,str2
li	$v0,4
syscall

#	READ function1_arg1
#~~~function1_arg1
subi	$t1,$fp,4
li	$v0,5
syscall

sw	$v0,0($t1)

#	PUSH function1_arg1
#~~~function1_arg1
lw	$t1,-4($fp)
sw	$t1,0($sp)
addi	$sp,$sp,-4

#	call my_function1
jal	my_function1
##3 = RET_int
#~~~RET_int
move	$t2,$v1
#~~~#3
subi	$t1,$fp,36

sw	$t2,0($t1)
#function_return = #3
#~~~#3
lw	$t2,-36($fp)
#~~~function_return
subi	$t1,$fp,16

sw	$t2,0($t1)
#	PRINT "return code is "
la	$a0,str3
li	$v0,4
syscall

#	PRINT function_return
#~~~function_return
lw	$t1,-16($fp)
move	$a0,$t1
li	$v0,1
syscall

#	GOTO LABEL_12
jal	LABEL_12
LABEL_8:
#	op == 1
#~~~op
lw	$t1,-0($fp)
#~~~1
li	$t2,1
seq	$t0,$t1,$t2
#	BZ LABEL_9
bne	$t0,1,LABEL_9
#	PRINT "input a char  "
la	$a0,str4
li	$v0,4
syscall

#	READ function2_arg2
#~~~function2_arg2
subi	$t1,$fp,12
li	$v0,12
syscall

sw	$v0,0($t1)

#	PRINT " input a num (num < 11) "
la	$a0,str5
li	$v0,4
syscall

#	READ function2_arg1
#~~~function2_arg1
subi	$t1,$fp,8
li	$v0,5
syscall

sw	$v0,0($t1)

#	PUSH function2_arg2
#~~~function2_arg2
lw	$t1,-12($fp)
sw	$t1,0($sp)
addi	$sp,$sp,-4

#	PUSH function2_arg1
#~~~function2_arg1
lw	$t1,-8($fp)
sw	$t1,0($sp)
addi	$sp,$sp,-4

#	call my_function2
jal	my_function2
#i = 0
#~~~0
li	$t2,0
#~~~i
subi	$t1,$fp,20

sw	$t2,0($t1)
LABEL_10:
##4 = my_var4[i]
#~~~my_var4[i]
#~~~my_var4
subi	$t1,$gp,92
#~~~i
lw	$t2,-20($fp)
sll	$t2,$t2,2
sub	$t1,$t1,$t2
lw	$t2,0($t1)
#~~~#4
subi	$t1,$fp,40

sw	$t2,0($t1)
#	PRINT #4
#~~~#4
lw	$t1,-40($fp)
move	$a0,$t1
li	$v0,11
syscall

#i = i + 1
#~~~1
li	$t2,1
#~~~i
lw	$t1,-20($fp)
add	$t1,$t1,$t2
#~~~i
subi	$t3,$fp,20

sw	$t1,0($t3)
#	i < 11
#~~~i
lw	$t1,-20($fp)
#~~~11
li	$t2,11
slt	$t0,$t1,$t2
#	BZ LABEL_11
bne	$t0,1,LABEL_11
#	GOTO LABEL_10
jal	LABEL_10
LABEL_11:
#	GOTO LABEL_12
jal	LABEL_12
LABEL_9:
#	PRINT "error op!"
la	$a0,str6
li	$v0,4
syscall

#	PRINT op
#~~~op
lw	$t1,-0($fp)
move	$a0,$t1
li	$v0,1
syscall

LABEL_12:
#	 ret 
li	$v0,10
syscall
